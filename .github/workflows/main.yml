name: "Build and cache nix packages"
on:
  push: 
    branches: [ main, nixify ]

jobs:
  testbuild:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - uses: cachix/cachix-action@v14
        with:
          name: holochain-ci

      - uses: cachix/cachix-action@v14
        with:
          name: holochain-open-dev

      - name: Install and test
        run: |
          nix develop --command bash -c "npm i && npm t && npm run -w @holochain-open-dev/file-storage build"

      - name: Build zomes
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.CACHIX_TOKEN_HOLOCHAIN_OPEN_DEV }}"
        run: |
          nix build -L .#file_storage_integrity
          cachix push holochain-open-dev $(nix path-info .#file_storage_integrity)
          cachix pin holochain-open-dev file_storage_integrity_debug $(nix path-info .#file_storage_integrity)

          nix build -L .#file_storage_integrity.meta.release
          cachix push holochain-open-dev $(nix path-info .#file_storage_integrity.meta.release)
          cachix pin holochain-open-dev file_storage_integrity $(nix path-info .#file_storage_integrity.meta.release)

          nix build -L .#file_storage
          cachix push holochain-open-dev $(nix path-info .#file_storage)
          cachix pin holochain-open-dev file_storage_debug $(nix path-info .#file_storage)

          nix build -L .#file_storage.meta.release
          cachix push holochain-open-dev $(nix path-info .#file_storage.meta.release)
          cachix pin holochain-open-dev file_storage $(nix path-info .#file_storage.meta.release)
