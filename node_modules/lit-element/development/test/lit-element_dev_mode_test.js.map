{"version":3,"file":"lit-element_dev_mode_test.js","sourceRoot":"","sources":["../../src/test/lit-element_dev_mode_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LitElement} from '../lit-element.js';\nimport {generateElementName} from './test-helpers.js';\nimport {assert} from '@esm-bundle/chai';\n\n// Note, since tests are not built with production support, detect DEV_MODE\n// by checking if warning API is available.\nconst DEV_MODE = !!LitElement.enableWarning;\n\nif (DEV_MODE) {\n  suite('Developer mode warnings', () => {\n    let container: HTMLElement;\n    let warnings: string[] = [];\n\n    const consoleWarn = console.warn;\n\n    suiteSetup(() => {\n      console.warn = (message: string) => warnings.push(message);\n    });\n\n    suiteTeardown(() => {\n      console.warn = consoleWarn;\n    });\n\n    setup(() => {\n      warnings = [];\n      container = document.createElement('div');\n      document.body.appendChild(container);\n    });\n\n    teardown(() => {\n      if (container && container.parentNode) {\n        container.parentNode.removeChild(container);\n      }\n    });\n\n    test('warns when `static render` is implemented', () => {\n      class A extends LitElement {\n        static render() {}\n      }\n      customElements.define(generateElementName(), A);\n      new A();\n      assert.equal(warnings.length, 1);\n      assert.include(warnings[0], 'render');\n    });\n\n    test('warns on first instance only', () => {\n      class A extends LitElement {\n        static render() {}\n      }\n      customElements.define(generateElementName(), A);\n      new A();\n      new A();\n      new A();\n      assert.equal(warnings.length, 1);\n      assert.include(warnings[0], 'render');\n    });\n\n    test('warns when `static getStyles` is implemented', () => {\n      class A extends LitElement {\n        static getStyles() {}\n      }\n      customElements.define(generateElementName(), A);\n      new A();\n      assert.equal(warnings.length, 1);\n      assert.include(warnings[0], 'getStyles');\n    });\n\n    test('warns when `adoptStyles` is implemented', () => {\n      class A extends LitElement {\n        adoptStyles() {}\n      }\n      customElements.define(generateElementName(), A);\n      new A();\n      assert.equal(warnings.length, 1);\n      assert.include(warnings[0], 'adoptStyles');\n    });\n  });\n}\n"]}