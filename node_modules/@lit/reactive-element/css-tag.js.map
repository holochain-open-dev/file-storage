{"version":3,"file":"css-tag.js","sources":["src/css-tag.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets =\n  window.ShadowRoot &&\n  (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultFlatArray = CSSResultOrNative[];\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // Note, if `supportsAdoptingStyleSheets` is true then we assume\n    // CSSStyleSheet is constructable.\n    if (supportsAdoptingStyleSheets && this._styleSheet === undefined) {\n      this._styleSheet = new CSSStyleSheet();\n      this._styleSheet.replaceSync(this.cssText);\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\nconst cssResultCache = new Map<string, CSSResult>();\n\nconst getCSSResult = (cssText: string): CSSResult => {\n  let result = cssResultCache.get(cssText);\n  if (result === undefined) {\n    cssResultCache.set(\n      cssText,\n      (result = new CSSResult(cssText, constructionToken))\n    );\n  }\n  return result;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return getCSSResult(typeof value === 'string' ? value : String(value));\n};\n\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResultGroup => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return getCSSResult(cssText);\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: CSSResultFlatArray\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle = supportsAdoptingStyleSheets\n  ? (s: CSSResultOrNative) => s\n  : (s: CSSResultOrNative) =>\n      s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n"],"names":["supportsAdoptingStyleSheets","window","ShadowRoot","undefined","ShadyCSS","nativeShadow","Document","prototype","CSSStyleSheet","constructionToken","Symbol","CSSResult","[object Object]","cssText","safeToken","Error","this","styleSheet","_styleSheet","replaceSync","cssResultCache","Map","getCSSResult","result","get","set","unsafeCSS","value","String","css","strings","values","length","reduce","acc","v","idx","textFromCSSResult","adoptStyles","renderRoot","styles","adoptedStyleSheets","map","s","forEach","style","document","createElement","textContent","appendChild","getCompatibleStyle","sheet","rule","cssRules","cssResultFromStyleSheet"],"mappings":";;;;;MASaA,EACXC,OAAOC,kBACcC,IAApBF,OAAOG,UAA0BH,OAAOG,SAASC,eAClD,uBAAwBC,SAASC,WACjC,YAAaC,cAAcD,UAUvBE,EAAoBC,eAEbC,EAIXC,YAAYC,EAAiBC,GAC3B,GAAIA,IAAcL,EAChB,MAAUM,MACR,qEAGJC,KAAKH,QAAUA,EAKjBI,iBAOE,OAJIjB,QAAoDG,IAArBa,KAAKE,IACtCF,KAAKE,EAAc,IAAIV,cACvBQ,KAAKE,EAAYC,YAAYH,KAAKH,UAE7BG,KAAKE,EAGdN,WACE,OAAOI,KAAKH,SAIhB,MAAMO,EAAiB,IAAIC,IAErBC,EAAgBT,IACpB,IAAIU,EAASH,EAAeI,IAAIX,GAOhC,YANeV,IAAXoB,GACFH,EAAeK,IACbZ,EACCU,EAAS,IAAIZ,EAAUE,EAASJ,IAG9Bc,GAwBIG,EAAaC,GACjBL,EAA8B,iBAAVK,EAAqBA,EAAeA,EAAPC,IAS7CC,EAAM,CACjBC,KACGC,KAEH,MAAMlB,EACe,IAAnBiB,EAAQE,OACJF,EAAQ,GACRC,EAAOE,QACL,CAACC,EAAKC,EAAGC,IAAQF,EAvCD,CAACP,IACzB,GAAIA,aAAiBhB,EACnB,OAAOgB,EAAMd,QACR,GAAqB,iBAAVc,EAChB,OAAOA,EAEP,MAAUZ,MACR,mEACKY,EADL,yFAgC2BU,CAAkBF,GAAKL,EAAQM,EAAM,IAC5DN,EAAQ,IAEhB,OAAOR,EAAaT,IAYTyB,EAAc,CACzBC,EACAC,KAEIxC,EACDuC,EAA0BE,mBAAqBD,EAAOE,KAAKC,GAC1DA,aAAanC,cAAgBmC,EAAIA,EAAE1B,aAGrCuB,EAAOI,SAASD,IACd,MAAME,EAAQC,SAASC,cAAc,SACrCF,EAAMG,YAAeL,EAAgB9B,QACrC0B,EAAWU,YAAYJ,OAahBK,EAAqBlD,EAC7B2C,GAAyBA,EACzBA,GACCA,aAAanC,cAXa,CAAC2C,IAC/B,IAAItC,EAAU,GACd,IAAK,MAAMuC,KAAQD,EAAME,SACvBxC,GAAWuC,EAAKvC,QAElB,OAAOa,EAAUb,IAMgByC,CAAwBX,GAAKA"}