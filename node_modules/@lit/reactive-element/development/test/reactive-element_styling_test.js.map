{"version":3,"file":"reactive-element_styling_test.js","sourceRoot":"","sources":["../../src/test/reactive-element_styling_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {\n  css,\n  ReactiveElement,\n  unsafeCSS,\n  CSSResultArray,\n} from '../reactive-element.js';\n\nimport {\n  canTestReactiveElement,\n  generateElementName,\n  getComputedStyleValue,\n  RenderingElement,\n  html,\n} from './test-helpers.js';\nimport {assert} from '@esm-bundle/chai';\n\n(canTestReactiveElement ? suite : suite.skip)('Styling', () => {\n  suite('Static get styles', () => {\n    let container: HTMLElement;\n\n    setup(() => {\n      container = document.createElement('div');\n      document.body.appendChild(container);\n    });\n\n    teardown(() => {\n      if (container && container.parentNode) {\n        container.parentNode.removeChild(container);\n      }\n    });\n\n    test('content shadowRoot is styled via static get styles in multiple instances', async () => {\n      const name = generateElementName();\n      customElements.define(\n        name,\n        class extends RenderingElement {\n          static get styles() {\n            return [\n              css`\n                div {\n                  border: 2px solid blue;\n                }\n              `,\n              css`\n                span {\n                  display: block;\n                  border: 3px solid blue;\n                }\n              `,\n            ];\n          }\n\n          render() {\n            return html` <div>Testing1</div>\n              <span>Testing2</span>`;\n          }\n        }\n      );\n      const testInstance = async () => {\n        const el = document.createElement(name);\n        container.appendChild(el);\n        await (el as ReactiveElement).updateComplete;\n        const div = el.shadowRoot!.querySelector('div');\n        assert.equal(\n          getComputedStyleValue(div!, 'border-top-width').trim(),\n          '2px'\n        );\n        const span = el.shadowRoot!.querySelector('span');\n        assert.equal(\n          getComputedStyleValue(span!, 'border-top-width').trim(),\n          '3px'\n        );\n      };\n      // test multiple instances\n      await testInstance();\n      await testInstance();\n      await testInstance();\n    });\n\n    // Test this in Shadow DOM without `adoptedStyleSheets` only since it's easily\n    // detectable in that case.\n    const testShadowDOMStyleCount =\n      (!window.ShadyDOM || !window.ShadyDOM.inUse) &&\n      !('adoptedStyleSheets' in Document.prototype);\n    (testShadowDOMStyleCount ? test : test.skip)(\n      'when an array is returned from `static get styles`, one style is generated per array item',\n      async () => {\n        const name = generateElementName();\n        customElements.define(\n          name,\n          class extends RenderingElement {\n            static get styles() {\n              return [\n                css`\n                  div {\n                    border: 2px solid blue;\n                  }\n                `,\n                css`\n                  span {\n                    display: block;\n                    border: 3px solid blue;\n                  }\n                `,\n              ];\n            }\n\n            render() {\n              return html` <div>Testing1</div>\n                <span>Testing2</span>`;\n            }\n          }\n        );\n        const el = document.createElement(name);\n        container.appendChild(el);\n        await (el as ReactiveElement).updateComplete;\n        assert.equal(el.shadowRoot!.querySelectorAll('style').length, 2);\n      }\n    );\n\n    test('static get styles can be a single CSSResult', async () => {\n      const name = generateElementName();\n      customElements.define(\n        name,\n        class extends RenderingElement {\n          static get styles() {\n            return css`\n              div {\n                border: 2px solid blue;\n              }\n            `;\n          }\n\n          render() {\n            return html` <div>Testing</div>`;\n          }\n        }\n      );\n      const el = document.createElement(name);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      const div = el.shadowRoot!.querySelector('div');\n      assert.equal(\n        getComputedStyleValue(div!, 'border-top-width').trim(),\n        '2px'\n      );\n    });\n\n    test('static get styles allows composition via `css` values', async () => {\n      const name = generateElementName();\n      customElements.define(\n        name,\n        class extends RenderingElement {\n          static get styles() {\n            // Alias avoids syntax highlighting issues in editors\n            const cssValue = css;\n            return [\n              css`\n                div {\n                  border: ${cssValue`2px solid blue`};\n                }\n              `,\n              css`\n                span {\n                  display: block;\n                  border: ${cssValue`3px solid blue`};\n                }\n              `,\n            ];\n          }\n\n          render() {\n            return html` <div>Testing1</div>\n              <span>Testing2</span>`;\n          }\n        }\n      );\n      const el = document.createElement(name);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      const div = el.shadowRoot!.querySelector('div');\n      assert.equal(\n        getComputedStyleValue(div!, 'border-top-width').trim(),\n        '2px'\n      );\n      const span = el.shadowRoot!.querySelector('span');\n      assert.equal(\n        getComputedStyleValue(span!, 'border-top-width').trim(),\n        '3px'\n      );\n    });\n\n    test('Any value can be used in `css` when included with `unsafeCSS`', async () => {\n      const name = generateElementName();\n      const someVar = `2px solid blue`;\n      customElements.define(\n        name,\n        class extends RenderingElement {\n          static get styles() {\n            return css`\n              div {\n                border: ${unsafeCSS(someVar)};\n              }\n            `;\n          }\n\n          render() {\n            return html` <div>Testing</div>`;\n          }\n        }\n      );\n      const el = document.createElement(name);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      const div = el.shadowRoot!.querySelector('div');\n      assert.equal(\n        getComputedStyleValue(div!, 'border-top-width').trim(),\n        '2px'\n      );\n    });\n\n    test('unsafeCSS can be used standalone', async () => {\n      const name = generateElementName();\n      customElements.define(\n        name,\n        class extends RenderingElement {\n          static get styles() {\n            return unsafeCSS('div {border: 2px solid blue}');\n          }\n\n          render() {\n            return html` <div>Testing</div>`;\n          }\n        }\n      );\n      const el = document.createElement(name);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      const div = el.shadowRoot!.querySelector('div');\n      assert.equal(\n        getComputedStyleValue(div!, 'border-top-width').trim(),\n        '2px'\n      );\n    });\n\n    test('`static get styles` applies last instance of style', async () => {\n      const name = generateElementName();\n      const s1 = css`\n        div {\n          border: 2px solid blue;\n        }\n      `;\n      const s2 = css`\n        div {\n          border: 3px solid blue;\n        }\n      `;\n      customElements.define(\n        name,\n        class extends RenderingElement {\n          static get styles() {\n            return [s1, s2, s1];\n          }\n\n          render() {\n            return html` <div>Testing1</div>`;\n          }\n        }\n      );\n      const el = document.createElement(name);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      const div = el.shadowRoot!.querySelector('div');\n      assert.equal(\n        getComputedStyleValue(div!, 'border-top-width').trim(),\n        '2px'\n      );\n    });\n\n    test('`static get styles` array is flattened', async () => {\n      const name = generateElementName();\n      const styles = [\n        css`\n          .level1 {\n            border: 1px solid blue;\n          }\n        `,\n        [\n          css`\n            .level2 {\n              border: 2px solid blue;\n            }\n          `,\n          [\n            css`\n              .level3 {\n                border: 3px solid blue;\n              }\n            `,\n            [\n              css`\n                .level4 {\n                  border: 4px solid blue;\n                }\n              `,\n            ],\n          ],\n        ],\n      ];\n      customElements.define(\n        name,\n        class extends RenderingElement {\n          static get styles() {\n            return [styles];\n          }\n\n          render() {\n            return html` <div class=\"level1\">Testing1</div>\n              <div class=\"level2\">Testing2</div>\n              <div class=\"level3\">Testing3</div>\n              <div class=\"level4\">Testing4</div>`;\n          }\n        }\n      );\n      const el = document.createElement(name);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      const level1 = el.shadowRoot!.querySelector('.level1');\n      const level2 = el.shadowRoot!.querySelector('.level2');\n      const level3 = el.shadowRoot!.querySelector('.level3');\n      const level4 = el.shadowRoot!.querySelector('.level4');\n      assert.equal(\n        getComputedStyleValue(level1!, 'border-top-width').trim(),\n        '1px'\n      );\n      assert.equal(\n        getComputedStyleValue(level2!, 'border-top-width').trim(),\n        '2px'\n      );\n      assert.equal(\n        getComputedStyleValue(level3!, 'border-top-width').trim(),\n        '3px'\n      );\n      assert.equal(\n        getComputedStyleValue(level4!, 'border-top-width').trim(),\n        '4px'\n      );\n    });\n\n    test('`styles` can be a static field', async () => {\n      const name = generateElementName();\n      customElements.define(\n        name,\n        class extends RenderingElement {\n          static styles = [\n            css`\n              div {\n                border: 2px solid blue;\n              }\n            `,\n            css`\n              span {\n                display: block;\n                border: 3px solid blue;\n              }\n            `,\n          ];\n\n          render() {\n            return html` <div>Testing1</div>\n              <span>Testing2</span>`;\n          }\n        }\n      );\n      const el = document.createElement(name);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      const div = el.shadowRoot!.querySelector('div');\n      assert.equal(\n        getComputedStyleValue(div!, 'border-top-width').trim(),\n        '2px'\n      );\n      const span = el.shadowRoot!.querySelector('span');\n      assert.equal(\n        getComputedStyleValue(span!, 'border-top-width').trim(),\n        '3px'\n      );\n    });\n\n    test('can extend and augment `styles`', async () => {\n      const base = generateElementName();\n      class BaseClass extends RenderingElement {\n        static get styles() {\n          return css`\n            div {\n              border: 2px solid blue;\n            }\n          `;\n        }\n\n        render() {\n          return html` <div>Testing1</div>`;\n        }\n      }\n      customElements.define(base, BaseClass);\n      const sub = generateElementName();\n      customElements.define(\n        sub,\n        class extends BaseClass {\n          static get styles() {\n            return [\n              super.styles,\n              css`\n                span {\n                  display: block;\n                  border: 3px solid blue;\n                }\n              `,\n            ];\n          }\n\n          render() {\n            return html` ${super.render()}\n              <span>Testing2</span>`;\n          }\n        }\n      );\n\n      const subsub = generateElementName();\n      customElements.define(\n        subsub,\n        class extends BaseClass {\n          static get styles() {\n            return [\n              super.styles,\n              css`\n                p {\n                  display: block;\n                  border: 4px solid blue;\n                }\n              `,\n            ];\n          }\n\n          render() {\n            return html` ${super.render()}\n              <p>Testing3</p>`;\n          }\n        }\n      );\n      let el = document.createElement(base);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      const div = el.shadowRoot!.querySelector('div');\n      assert.equal(\n        getComputedStyleValue(div!, 'border-top-width').trim(),\n        '2px'\n      );\n      el = document.createElement(sub);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      const span = el.shadowRoot!.querySelector('span');\n      assert.equal(\n        getComputedStyleValue(span!, 'border-top-width').trim(),\n        '3px'\n      );\n      el = document.createElement(subsub);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      const p = el.shadowRoot!.querySelector('p');\n      assert.equal(getComputedStyleValue(p!, 'border-top-width').trim(), '4px');\n    });\n\n    test('can extend and override `styles`', async () => {\n      const base = generateElementName();\n      class BaseClass extends RenderingElement {\n        static get styles() {\n          return css`\n            div {\n              border: 2px solid blue;\n            }\n          `;\n        }\n\n        render() {\n          return html` <div>Testing1</div>`;\n        }\n      }\n      customElements.define(base, BaseClass);\n\n      const sub = generateElementName();\n      customElements.define(\n        sub,\n        class extends BaseClass {\n          static get styles() {\n            return css`\n              div {\n                border: 3px solid blue;\n              }\n            `;\n          }\n        }\n      );\n\n      const subsub = generateElementName();\n      customElements.define(\n        subsub,\n        class extends BaseClass {\n          static get styles() {\n            return css`\n              div {\n                border: 4px solid blue;\n              }\n            `;\n          }\n        }\n      );\n      let el = document.createElement(base);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      let div = el.shadowRoot!.querySelector('div');\n      assert.equal(\n        getComputedStyleValue(div!, 'border-top-width').trim(),\n        '2px'\n      );\n      el = document.createElement(sub);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      div = el.shadowRoot!.querySelector('div');\n      assert.equal(\n        getComputedStyleValue(div!, 'border-top-width').trim(),\n        '3px'\n      );\n      el = document.createElement(subsub);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      div = el.shadowRoot!.querySelector('div');\n      assert.equal(\n        getComputedStyleValue(div!, 'border-top-width').trim(),\n        '4px'\n      );\n    });\n\n    test('elements should inherit `styles` by default', async () => {\n      const base = generateElementName();\n      class BaseClass extends RenderingElement {\n        static styles = css`\n          div {\n            border: 4px solid black;\n          }\n        `;\n      }\n      customElements.define(base, BaseClass);\n\n      const sub = generateElementName();\n      customElements.define(\n        sub,\n        class extends BaseClass {\n          render() {\n            return html`<div></div>`;\n          }\n        }\n      );\n\n      const el = document.createElement(sub);\n      container.appendChild(el);\n      await (el as ReactiveElement).updateComplete;\n      const div = el.shadowRoot!.querySelector('div');\n      assert.equal(\n        getComputedStyle(div!).getPropertyValue('border-top-width').trim(),\n        '4px'\n      );\n    });\n\n    test('element class only gathers styles once', async () => {\n      const base = generateElementName();\n      let getStylesCounter = 0;\n      let stylesCounter = 0;\n      customElements.define(\n        base,\n        class extends RenderingElement {\n          static finalizeStyles(styles: CSSResultArray) {\n            getStylesCounter++;\n            return super.finalizeStyles(styles);\n          }\n\n          static get styles() {\n            stylesCounter++;\n            return css`\n              :host {\n                border: 10px solid black;\n              }\n            `;\n          }\n          render() {\n            return html`<div>styled</div>`;\n          }\n        }\n      );\n      const el1 = document.createElement(base);\n      const el2 = document.createElement(base);\n      container.appendChild(el1);\n      container.appendChild(el2);\n      await Promise.all([\n        (el1 as ReactiveElement).updateComplete,\n        (el2 as ReactiveElement).updateComplete,\n      ]);\n      assert.equal(\n        getComputedStyle(el1).getPropertyValue('border-top-width').trim(),\n        '10px',\n        'el1 styled correctly'\n      );\n      assert.equal(\n        getComputedStyle(el2).getPropertyValue('border-top-width').trim(),\n        '10px',\n        'el2 styled correctly'\n      );\n      assert.equal(\n        stylesCounter,\n        1,\n        'styles property should only be accessed once'\n      );\n      assert.equal(getStylesCounter, 1, 'getStyles() should be called once');\n    });\n\n    test('Styles are not removed if the first rendered value is undefined.', async () => {\n      const localName = generateElementName();\n\n      class SomeCustomElement extends RenderingElement {\n        static styles = css`\n          :host {\n            border: 4px solid black;\n          }\n        `;\n\n        renderUndefined: boolean;\n\n        constructor() {\n          super();\n          this.renderUndefined = true;\n        }\n\n        static get properties() {\n          return {\n            renderUndefined: {\n              type: Boolean,\n              value: true,\n            },\n          };\n        }\n\n        render() {\n          if (this.renderUndefined) {\n            return undefined;\n          }\n\n          return html`Some text.`;\n        }\n      }\n      customElements.define(localName, SomeCustomElement);\n\n      const element = document.createElement(localName) as SomeCustomElement;\n      document.body.appendChild(element);\n\n      await (element as ReactiveElement).updateComplete;\n      assert.equal(\n        getComputedStyle(element).getPropertyValue('border-top-width').trim(),\n        '4px'\n      );\n\n      element.renderUndefined = false;\n\n      await (element as ReactiveElement).updateComplete;\n      assert.equal(\n        getComputedStyle(element).getPropertyValue('border-top-width').trim(),\n        '4px'\n      );\n\n      document.body.removeChild(element);\n    });\n\n    const testAdoptedStyleSheets =\n      window.ShadowRoot && 'replace' in CSSStyleSheet.prototype;\n    (testAdoptedStyleSheets ? test : test.skip)(\n      'Can return CSSStyleSheet where adoptedStyleSheets are natively supported',\n      async () => {\n        const sheet = new CSSStyleSheet();\n        sheet.replaceSync('div { border: 4px solid red; }');\n        const normal = css`\n          span {\n            border: 4px solid blue;\n          }\n        `;\n\n        const base = generateElementName();\n        customElements.define(\n          base,\n          class extends RenderingElement {\n            static styles = [sheet, normal];\n\n            render() {\n              return html`<div></div>\n                <span></span>`;\n            }\n          }\n        );\n\n        const el = document.createElement(base);\n        container.appendChild(el);\n        await (el as ReactiveElement).updateComplete;\n        const div = el.shadowRoot!.querySelector('div')!;\n        assert.equal(\n          getComputedStyle(div).getPropertyValue('border-top-width').trim(),\n          '4px'\n        );\n\n        const span = el.shadowRoot!.querySelector('span')!;\n        assert.equal(\n          getComputedStyle(span).getPropertyValue('border-top-width').trim(),\n          '4px'\n        );\n\n        // When the WC polyfills are included, calling .replaceSync is a noop to\n        // our styles as they're already flattened (so expect 4px). Otherwise,\n        // look for the updated value.\n        const usesAdoptedStyleSheet =\n          window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow;\n        const expectedValue = usesAdoptedStyleSheet ? '2px' : '4px';\n        sheet.replaceSync('div { border: 2px solid red; }');\n\n        assert.equal(\n          getComputedStyle(div).getPropertyValue('border-top-width').trim(),\n          expectedValue\n        );\n      }\n    );\n\n    // Test that when ShadyCSS is enabled (while still having native support for\n    // adoptedStyleSheets), we can return a CSSStyleSheet that will be flattened\n    // and play nice with others.\n    const testShadyCSSWithAdoptedStyleSheetSupport =\n      window.ShadowRoot &&\n      'replace' in CSSStyleSheet.prototype &&\n      window.ShadyCSS !== undefined &&\n      !window.ShadyCSS.nativeShadow;\n    (testShadyCSSWithAdoptedStyleSheetSupport ? test : test.skip)(\n      'CSSStyleSheet is flattened where ShadyCSS is enabled yet adoptedStyleSheets are supported',\n      async () => {\n        const sheet = new CSSStyleSheet();\n        sheet.replaceSync('div { border: 4px solid red; }');\n\n        const base = generateElementName();\n        customElements.define(\n          base,\n          class extends RenderingElement {\n            static styles = sheet;\n\n            render() {\n              return html`<div></div>`;\n            }\n          }\n        );\n\n        const el = document.createElement(base);\n        container.appendChild(el);\n        await (el as ReactiveElement).updateComplete;\n\n        const div = el.shadowRoot!.querySelector('div')!;\n        assert.equal(\n          getComputedStyle(div).getPropertyValue('border-top-width').trim(),\n          '4px'\n        );\n\n        // CSSStyleSheet update should fail, as the styles will be flattened.\n        sheet.replaceSync('div { border: 2px solid red; }');\n        assert.equal(\n          getComputedStyle(div).getPropertyValue('border-top-width').trim(),\n          '4px',\n          'CSS should not reflect CSSStyleSheet as it was flattened'\n        );\n      }\n    );\n  });\n});\n"]}