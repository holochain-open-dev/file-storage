{"version":3,"file":"reactive-element-controllers_test.js","sourceRoot":"","sources":["../../src/test/reactive-element-controllers_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {\n  PropertyValues,\n  ReactiveElement,\n  ReactiveController,\n} from '../reactive-element.js';\nimport {generateElementName} from './test-helpers.js';\nimport {assert} from '@esm-bundle/chai';\n\nsuite('Reactive controllers', () => {\n  class MyController implements ReactiveController {\n    host: ReactiveElement;\n    updateCount = 0;\n    updatedCount = 0;\n    connectedCount = 0;\n    disconnectedCount = 0;\n    callbackOrder: string[] = [];\n\n    constructor(host: ReactiveElement) {\n      this.host = host;\n      this.host.addController(this);\n    }\n\n    hostConnected() {\n      this.connectedCount++;\n      this.callbackOrder.push('hostConnected');\n    }\n\n    hostDisconnected() {\n      this.disconnectedCount++;\n      this.callbackOrder.push('hostDisconnected');\n    }\n\n    hostUpdate() {\n      this.updateCount++;\n      this.callbackOrder.push('hostUpdate');\n    }\n\n    hostUpdated() {\n      this.updatedCount++;\n      this.callbackOrder.push('hostUpdated');\n    }\n  }\n\n  class A extends ReactiveElement {\n    static properties = {foo: {}};\n    foo = 'foo';\n    updateCount = 0;\n    updatedCount = 0;\n    connectedCount = 0;\n    disconnectedCount = 0;\n\n    controller = new MyController(this);\n\n    connectedCallback() {\n      this.connectedCount++;\n      super.connectedCallback();\n      this.controller.callbackOrder.push('connectedCallback');\n    }\n\n    disconnectedCallback() {\n      this.disconnectedCount++;\n      super.disconnectedCallback();\n      this.controller.callbackOrder.push('disconnectedCallback');\n    }\n\n    update(changedProperties: PropertyValues) {\n      this.updateCount++;\n      super.update(changedProperties);\n      this.controller.callbackOrder.push('update');\n    }\n\n    firstUpdated() {\n      this.controller.callbackOrder.push('firstUpdated');\n    }\n\n    updated() {\n      this.updatedCount++;\n      this.controller.callbackOrder.push('updated');\n    }\n  }\n  customElements.define(generateElementName(), A);\n\n  let container: HTMLElement;\n  let el!: A;\n\n  setup(async () => {\n    container = document.createElement('div');\n    document.body.appendChild(container);\n    el = new A();\n    container.appendChild(el);\n    await el.updateComplete;\n  });\n\n  teardown(() => {\n    if (container && container.parentNode) {\n      container.parentNode.removeChild(container);\n    }\n  });\n\n  test('controllers can implement hostConnected/hostDisconnected', () => {\n    assert.equal(el.connectedCount, 1);\n    assert.equal(el.disconnectedCount, 0);\n    assert.equal(el.controller.connectedCount, 1);\n    assert.equal(el.controller.disconnectedCount, 0);\n    container.removeChild(el);\n    assert.equal(el.connectedCount, 1);\n    assert.equal(el.disconnectedCount, 1);\n    assert.equal(el.controller.connectedCount, 1);\n    assert.equal(el.controller.disconnectedCount, 1);\n    container.appendChild(el);\n    assert.equal(el.connectedCount, 2);\n    assert.equal(el.disconnectedCount, 1);\n    assert.equal(el.controller.connectedCount, 2);\n    assert.equal(el.controller.disconnectedCount, 1);\n  });\n\n  test('controllers can implement hostUpdate/hostUpdated', async () => {\n    assert.equal(el.updateCount, 1);\n    assert.equal(el.updatedCount, 1);\n    assert.equal(el.controller.updateCount, 1);\n    assert.equal(el.controller.updatedCount, 1);\n    el.foo = 'new';\n    await el.updateComplete;\n    assert.equal(el.updateCount, 2);\n    assert.equal(el.updatedCount, 2);\n    assert.equal(el.controller.updateCount, 2);\n    assert.equal(el.controller.updatedCount, 2);\n  });\n\n  test('controllers can be removed', async () => {\n    assert.equal(el.controller.connectedCount, 1);\n    assert.equal(el.controller.disconnectedCount, 0);\n    assert.equal(el.controller.updateCount, 1);\n    assert.equal(el.controller.updatedCount, 1);\n    el.removeController(el.controller);\n    el.foo = 'new';\n    await el.updateComplete;\n    el.remove();\n    assert.equal(el.controller.connectedCount, 1);\n    assert.equal(el.controller.disconnectedCount, 0);\n    assert.equal(el.controller.updateCount, 1);\n    assert.equal(el.controller.updatedCount, 1);\n  });\n\n  test('controllers callback order', async () => {\n    assert.deepEqual(el.controller.callbackOrder, [\n      'hostConnected',\n      'connectedCallback',\n      'hostUpdate',\n      'update',\n      'hostUpdated',\n      'firstUpdated',\n      'updated',\n    ]);\n    el.controller.callbackOrder = [];\n    el.foo = 'new';\n    await el.updateComplete;\n    assert.deepEqual(el.controller.callbackOrder, [\n      'hostUpdate',\n      'update',\n      'hostUpdated',\n      'updated',\n    ]);\n    el.controller.callbackOrder = [];\n    container.removeChild(el);\n    assert.deepEqual(el.controller.callbackOrder, [\n      'hostDisconnected',\n      'disconnectedCallback',\n    ]);\n  });\n\n  test('controllers added after an element is first connected call `hostConnected`', () => {\n    const controller = new MyController(el);\n    assert.equal(controller.connectedCount, 1);\n    assert.equal(controller.disconnectedCount, 0);\n    container.removeChild(el);\n    assert.equal(controller.disconnectedCount, 1);\n    container.appendChild(el);\n    assert.equal(controller.connectedCount, 2);\n    assert.equal(controller.disconnectedCount, 1);\n  });\n\n  test('controllers added on an upgraded element call `hostConnected` once', async () => {\n    const name = generateElementName();\n    class B extends A {}\n    const el = document.createElement(name) as B;\n    container.appendChild(el);\n    customElements.define(name, B);\n    await el.updateComplete;\n    assert.equal(el.controller.connectedCount, 1);\n    assert.equal(el.controller.disconnectedCount, 0);\n    container.removeChild(el);\n    assert.equal(el.controller.disconnectedCount, 1);\n    container.appendChild(el);\n    assert.equal(el.controller.connectedCount, 2);\n    assert.equal(el.controller.disconnectedCount, 1);\n  });\n});\n"]}