{"version":3,"file":"test-helpers.js","sourceRoot":"","sources":["../../src/test/test-helpers.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAC,eAAe,EAAiB,MAAM,wBAAwB,CAAC;AAEvE,IAAI,KAAK,GAAG,CAAC,CAAC;AACd,MAAM,CAAC,MAAM,mBAAmB,GAAG,GAAG,EAAE,CAAC,KAAK,KAAK,EAAE,EAAE,CAAC;AAExD,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,EAAE,CAC5B,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC;AAE3D,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,OAAgB,EAAE,QAAgB,EAAE,EAAE,CAC1E,MAAM,CAAC,QAAQ;IACb,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC,OAAO,EAAE,QAAQ,CAAC;IAC1D,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AAE3D,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,IAAY,EAAE,EAAE,CACtD,IAAI,CAAC,OAAO,CAAC,iCAAiC,EAAE,EAAE,CAAC,CAAC;AAEtD,kEAAkE;AAClE,qDAAqD;AACrD,MAAM,CAAC,MAAM,sBAAsB,GACjC,CAAC,MAAM,CAAC,UAAU,IAAI,QAAC,MAAM,CAAC,QAAQ,0CAAE,KAAK,CAAA,CAAC;IAC9C,MAAM,CAAC,8BAA8B,CAAC;AAExC,MAAM,OAAO,gBAAiB,SAAQ,eAAe;IACnD,MAAM;QACJ,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,MAAM,CAAC,iBAAiC;QACtC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAChC,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,2DAA2D;YAC3D,sBAAsB;YACtB,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YACzD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;SACnC;IACH,CAAC;CACF;AAED,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,OAA6B,EAAE,GAAG,MAAiB,EAAE,EAAE;IAC1E,OAAO,MAAM,CAAC,MAAM,CAClB,CAAC,CAAS,EAAE,CAAU,EAAE,CAAS,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAC5D,OAAO,CAAC,CAAC,CAAC,CACX,CAAC;AACJ,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ReactiveElement, PropertyValues} from '../reactive-element.js';\n\nlet count = 0;\nexport const generateElementName = () => `x-${count++}`;\n\nexport const nextFrame = () =>\n  new Promise((resolve) => requestAnimationFrame(resolve));\n\nexport const getComputedStyleValue = (element: Element, property: string) =>\n  window.ShadyCSS\n    ? window.ShadyCSS.getComputedStyleValue(element, property)\n    : getComputedStyle(element).getPropertyValue(property);\n\nexport const stripExpressionComments = (html: string) =>\n  html.replace(/<!--\\?lit\\$[0-9]+\\$-->|<!---->/g, '');\n\n// Only test if ShadowRoot is available and either ShadyDOM is not\n// in use or it is and platform support is available.\nexport const canTestReactiveElement =\n  (window.ShadowRoot && !window.ShadyDOM?.inUse) ||\n  window.reactiveElementPlatformSupport;\n\nexport class RenderingElement extends ReactiveElement {\n  render(): string | undefined {\n    return '';\n  }\n  update(changedProperties: PropertyValues) {\n    const result = this.render();\n    super.update(changedProperties);\n    if (result !== undefined) {\n      // Save and replace any existing styles in root to simulate\n      // adoptedStylesheets.\n      const styles = this.renderRoot.querySelectorAll('style');\n      this.renderRoot.innerHTML = result;\n      this.renderRoot.append(...styles);\n    }\n  }\n}\n\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) => {\n  return values.reduce(\n    (a: string, v: unknown, i: number) => a + v + strings[i + 1],\n    strings[0]\n  );\n};\n"]}