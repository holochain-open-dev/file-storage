{"version":3,"file":"amd.min.js","sources":["../../src/err-msg.js","../../src/extras/amd.js"],"sourcesContent":["export function errMsg(errCode, msg) {\n  if (process.env.SYSTEM_PRODUCTION)\n    return (msg || \"\") + \" (SystemJS https://git.io/JvFET#\" + errCode + \")\";\n  else\n    return (msg || \"\") + \" (SystemJS Error#\" + errCode + \" \" + \"https://git.io/JvFET#\" + errCode + \")\";\n}","import { errMsg } from '../err-msg.js';\n\n/*\n * Support for AMD loading\n */\n(function (global) {\n  var systemPrototype = global.System.constructor.prototype;\n\n  var emptyInstantiation = [[], function () { return {} }];\n\n  function unsupportedRequire () {\n    throw Error(process.env.SYSTEM_PRODUCTION ? errMsg(5) : errMsg(5, 'AMD require not supported.'));\n  }\n\n  var tmpRegister, firstNamedDefine;\n\n  function emptyFn () {}\n\n  var requireExportsModule = ['require', 'exports', 'module'];\n\n  function createAMDRegister (amdDefineDeps, amdDefineExec) {\n    var exports = {};\n    var module = { exports: exports };\n    var depModules = [];\n    var setters = [];\n    var splice = 0;\n    for (var i = 0; i < amdDefineDeps.length; i++) {\n      var id = amdDefineDeps[i];\n      var index = setters.length;\n      if (id === 'require') {\n        depModules[i] = unsupportedRequire;\n        splice++;\n      }\n      else if (id === 'module') {\n        depModules[i] = module;\n        splice++;\n      }\n      else if (id === 'exports') {\n        depModules[i] = exports;\n        splice++;\n      }\n      else {\n        createSetter(i);\n      }\n      if (splice)\n        amdDefineDeps[index] = id;\n    }\n    if (splice)\n      amdDefineDeps.length -= splice;\n    var amdExec = amdDefineExec;\n    return [amdDefineDeps, function (_export) {\n      _export({ default: exports, __useDefault: true });\n      return {\n        setters: setters,\n        execute: function () {\n          var amdResult = amdExec.apply(exports, depModules);\n          if (amdResult !== undefined)\n            module.exports = amdResult;\n          _export(module.exports);\n          _export('default', module.exports);\n        }\n      };\n    }];\n\n    // needed to avoid iteration scope issues\n    function createSetter(idx) {\n      setters.push(function (ns) {\n        depModules[idx] = ns.__useDefault ? ns.default : ns;\n      });\n    }\n  }\n\n  // hook System.register to know the last declaration binding\n  var lastRegisterDeclare;\n  var systemRegister = systemPrototype.register;\n  systemPrototype.register = function (name, deps, declare) {\n    lastRegisterDeclare = typeof name === 'string' ? declare : deps;\n    systemRegister.apply(this, arguments);\n  };\n\n  var instantiate = systemPrototype.instantiate;\n  systemPrototype.instantiate = function() {\n    // Reset \"currently executing script\"\n    amdDefineDeps = null;\n    return instantiate.apply(this, arguments);\n  };\n\n  var getRegister = systemPrototype.getRegister;\n  systemPrototype.getRegister = function () {\n    if (tmpRegister)\n      return tmpRegister;\n\n    var _firstNamedDefine = firstNamedDefine;\n    firstNamedDefine = null;\n\n    var register = getRegister.call(this);\n    // if its an actual System.register leave it\n    if (register && register[1] === lastRegisterDeclare)\n      return register;\n\n    var _amdDefineDeps = amdDefineDeps;\n    amdDefineDeps = null;\n\n    // If the script registered a named module, return that module instead of re-instantiating it.\n    if (_firstNamedDefine)\n      return _firstNamedDefine;\n\n    // otherwise AMD takes priority\n    // no registration -> attempt AMD detection\n    if (!_amdDefineDeps)\n      return register || emptyInstantiation;\n\n    return createAMDRegister(_amdDefineDeps, amdDefineExec);\n  };\n  var amdDefineDeps, amdDefineExec;\n  global.define = function (name, deps, execute) {\n    var depsAndExec;\n    // define('', [], function () {})\n    if (typeof name === 'string') {\n      depsAndExec = getDepsAndExec(deps, execute);\n      if (amdDefineDeps) {\n        if (!System.registerRegistry) {\n          throw Error(process.env.SYSTEM_PRODUCTION ? errMsg(6) : errMsg(6, 'Include the named register extension for SystemJS named AMD support.'));\n        }\n        addToRegisterRegistry(name, createAMDRegister(depsAndExec[0], depsAndExec[1]));\n        amdDefineDeps = [];\n        amdDefineExec = emptyFn;\n        return;\n      }\n      else {\n        if (System.registerRegistry)\n          addToRegisterRegistry(name, createAMDRegister([].concat(depsAndExec[0]), depsAndExec[1]));\n        name = deps;\n        deps = execute;\n      }\n    }\n    depsAndExec = getDepsAndExec(name, deps);\n    amdDefineDeps = depsAndExec[0];\n    amdDefineExec = depsAndExec[1];\n  };\n  global.define.amd = {};\n\n  function getDepsAndExec(arg1, arg2) {\n    // define([], function () {})\n    if (arg1 instanceof Array) {\n      return [arg1, arg2];\n    }\n    // define({})\n    else if (typeof arg1 === 'object') {\n      return [[], function () { return arg1 }];\n    }\n    // define(function () {})\n    else if (typeof arg1 === 'function') {\n      return [requireExportsModule, arg1];\n    }\n  }\n\n  function addToRegisterRegistry(name, define) {\n    if (!firstNamedDefine) {\n      firstNamedDefine = define;\n      Promise.resolve().then(function () {\n        firstNamedDefine = null;\n      });\n    }\n\n    // We must call System.getRegister() here to give other extras, such as the named-exports extra,\n    // a chance to modify the define before it's put into the registerRegistry.\n    // See https://github.com/systemjs/systemjs/issues/2073\n    tmpRegister = define;\n    System.registerRegistry[name] = System.getRegister();\n    tmpRegister = null;\n  }\n})(typeof self !== 'undefined' ? self : global);\n"],"names":["errMsg","errCode","msg","global","unsupportedRequire","Error","emptyFn","createAMDRegister","amdDefineDeps","amdDefineExec","createSetter","idx","setters","push","ns","depModules","__useDefault","default","exports","module","splice","i","length","id","index","amdExec","_export","execute","amdResult","apply","undefined","getDepsAndExec","arg1","arg2","Array","requireExportsModule","addToRegisterRegistry","name","define","firstNamedDefine","Promise","resolve","then","tmpRegister","System","registerRegistry","getRegister","lastRegisterDeclare","systemPrototype","constructor","prototype","emptyInstantiation","systemRegister","register","deps","declare","this","arguments","instantiate","_firstNamedDefine","call","_amdDefineDeps","depsAndExec","concat","amd","self"],"mappings":"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"}