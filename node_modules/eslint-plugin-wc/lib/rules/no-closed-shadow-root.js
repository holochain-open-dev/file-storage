"use strict";
/**
 * @fileoverview Disallows closed shadow roots
 * @author James Garbutt <https://github.com/43081j>
 */
Object.defineProperty(exports, "__esModule", { value: true });
//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------
const rule = {
    meta: {
        docs: {
            description: 'Disallows closed shadow roots',
            url: 'https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-closed-shadow-root.md'
        },
        messages: {
            closedRoot: 'Closed shadow roots are rarely needed and generally not recommended'
        }
    },
    create(context) {
        // variables should be defined here
        //----------------------------------------------------------------------
        // Helpers
        //----------------------------------------------------------------------
        /**
         * Retrieves the `mode` property from an object, if any.
         *
         * @param {ESTree.ObjectExpression} node Node to check
         * @return {boolean}
         */
        function getClosedModeArgument(node) {
            if (node.arguments.length !== 1) {
                return undefined;
            }
            const firstArg = node.arguments[0];
            if (firstArg.type !== 'ObjectExpression') {
                return undefined;
            }
            return firstArg.properties.find((n) => n.type === 'Property' &&
                ((n.key.type === 'Identifier' && n.key.name === 'mode') ||
                    (n.key.type === 'Literal' && n.key.value === 'mode')) &&
                n.value.type === 'Literal' &&
                n.value.value === 'closed');
        }
        //----------------------------------------------------------------------
        // Public
        //----------------------------------------------------------------------
        return {
            CallExpression: (node) => {
                if (node.type === 'CallExpression' &&
                    node.callee.type === 'MemberExpression' &&
                    node.callee.property.type === 'Identifier' &&
                    node.callee.property.name === 'attachShadow') {
                    const arg = getClosedModeArgument(node);
                    if (arg) {
                        context.report({ node: arg, messageId: 'closedRoot' });
                    }
                }
            }
        };
    }
};
exports.default = rule;
