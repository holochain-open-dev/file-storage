export declare const rules: {
    'attach-shadow-constructor': import("eslint").Rule.RuleModule;
    'guard-super-call': import("eslint").Rule.RuleModule;
    'no-closed-shadow-root': import("eslint").Rule.RuleModule;
    'no-constructor-attributes': import("eslint").Rule.RuleModule;
    'no-invalid-element-name': import("eslint").Rule.RuleModule;
    'no-self-class': import("eslint").Rule.RuleModule;
    'no-typos': import("eslint").Rule.RuleModule;
};
export declare const configs: {
    recommended: {
        plugins: string[];
        parserOptions: {
            sourceType: string;
        };
        rules: {
            'wc/no-constructor-attributes': string;
            'wc/no-invalid-element-name': string;
            'wc/no-self-class': string;
        };
    };
    'best-practice': {
        extends: string[];
        plugins: string[];
        rules: {
            'wc/attach-shadow-constructor': string;
            'wc/guard-super-call': string;
            'wc/no-closed-shadow-root': string;
            'wc/no-typos': string;
        };
    };
};
