"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBrowserPageNavigationError = void 0;
const navigationError = (reason) => `Tests were interrupted because the page was ${reason}. This can happen when clicking a link, submitting a form or interacting with window.location.`;
/**
 * Returns an error if the browser was navigated by the user
 * @param testURL
 * @param navigations
 */
function getBrowserPageNavigationError(testURL, navigations) {
    if (testURL && navigations.length > 1) {
        const nav = navigations[navigations.length - 1];
        if (nav.origin === testURL.origin && nav.pathname === testURL.pathname) {
            return { message: navigationError('reloaded') };
        }
        else {
            const reportedPath = testURL.origin === nav.origin ? `${nav.pathname}${nav.search}` : nav.href;
            return {
                message: navigationError(`navigated to ${reportedPath}`),
            };
        }
    }
    return undefined;
}
exports.getBrowserPageNavigationError = getBrowserPageNavigationError;
//# sourceMappingURL=getBrowserPageNavigationError.js.map