"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRelativeStackFilePath = void 0;
const path_1 = __importDefault(require("path"));
const toFilePath_1 = require("./toFilePath");
async function getRelativeStackFilePath(string, userAgent, rootDir, stackLocationRegExp, sourceMapFunction) {
    const match = string.match(stackLocationRegExp);
    if (match) {
        const [, prefix, browserPath, line, column, suffix] = match;
        const pathWithoutParams = browserPath.split('?')[0].split('#')[0];
        const fullFilePath = pathWithoutParams.startsWith(rootDir)
            ? pathWithoutParams
            : path_1.default.join(rootDir, toFilePath_1.toFilePath(pathWithoutParams));
        const sourceMapResult = await sourceMapFunction(pathWithoutParams, fullFilePath, userAgent, Number(line), Number(column));
        const final = sourceMapResult !== null && sourceMapResult !== void 0 ? sourceMapResult : { filePath: fullFilePath, line, column };
        const relativeFilePath = path_1.default.relative(process.cwd(), final.filePath);
        const location = `${final.line ? `:${final.line}` : ''}${final.column ? `:${final.column}` : ''}`;
        const pathWithLocation = `${relativeFilePath}${location}`;
        // some browsers like firefox and webkit print an @ symbol in front of the filename
        // this makes it unclickable from the terminal
        const formattedPrefix = prefix.trim() === '@' ? ' @ ' : prefix;
        return {
            startIndex: match.index,
            replacedString: `${formattedPrefix}${pathWithLocation}${suffix}`,
            relativeFilePath,
            location,
        };
    }
    return null;
}
exports.getRelativeStackFilePath = getRelativeStackFilePath;
//# sourceMappingURL=getRelativeStackFilePath.js.map