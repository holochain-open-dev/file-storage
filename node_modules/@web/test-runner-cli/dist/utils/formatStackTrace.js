"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatStackTrace = exports.REGEXP_TEST_FRAMEWORK_STACK = void 0;
const replaceRelativeStackFilePath_1 = require("./replaceRelativeStackFilePath");
// const { PARAM_SESSION_ID } = constants;
exports.REGEXP_TEST_FRAMEWORK_STACK = /.+__web-test-runner__\/.+/;
async function formatStackTrace(error, userAgent, rootDir, stackLocationRegExp, sourceMapFunction) {
    if (!error.stack) {
        return '';
    }
    const strings = error.stack.split('\n');
    // some browsers don't include the error message in the first line, so
    // we add it in that case
    if (!error.stack.includes(error.message)) {
        strings.unshift(`${error.message}\n`);
    }
    const formatPromises = [];
    let i = 0;
    for (const string of strings) {
        if (!exports.REGEXP_TEST_FRAMEWORK_STACK.test(string)) {
            // ensure there is an indentation of 2 spaces
            const trimmedString = `${' '.repeat(i === 0 ? 0 : 2)}${string.trim()}`;
            // replace browser url with relative file path
            formatPromises.push(userAgent
                ? replaceRelativeStackFilePath_1.replaceRelativeStackFilePath(trimmedString, userAgent, rootDir, stackLocationRegExp, sourceMapFunction)
                : trimmedString);
        }
        i += 1;
    }
    return (await Promise.all(formatPromises)).join('\n');
}
exports.formatStackTrace = formatStackTrace;
//# sourceMappingURL=formatStackTrace.js.map