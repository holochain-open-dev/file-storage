"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SauceLabsLauncher = void 0;
const test_runner_selenium_1 = require("@web/test-runner-selenium");
const selenium_webdriver_1 = __importDefault(require("selenium-webdriver"));
const ip_1 = __importDefault(require("ip"));
const localIp = ip_1.default.address();
class SauceLabsLauncher extends test_runner_selenium_1.SeleniumLauncher {
    constructor(manager, name, sauceLabsUrl, capabilities) {
        super(new selenium_webdriver_1.default.Builder().usingServer(sauceLabsUrl).withCapabilities(capabilities));
        this.manager = manager;
        this.name = name;
    }
    startSession(sessionId, url) {
        return super.startSession(sessionId, url.replace(/(localhost|127\.0\.0\.1)/, localIp));
    }
    async startDebugSession() {
        throw new Error('Starting a debug session is not supported in browserstack');
    }
    async initialize(config) {
        await this.manager.registerLauncher(this);
        return super.initialize(config);
    }
    stop() {
        const stopPromise = super.stop();
        this.manager.deregisterLauncher(this);
        return stopPromise;
    }
}
exports.SauceLabsLauncher = SauceLabsLauncher;
//# sourceMappingURL=SauceLabsLauncher.js.map