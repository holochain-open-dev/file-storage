{"version":3,"file":"query.js","sources":["../src/decorators/query.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return decorateProperty({\n    descriptor: (name: PropertyKey) => {\n      const descriptor = {\n        get(this: ReactiveElement) {\n          return this.renderRoot?.querySelector(selector);\n        },\n        enumerable: true,\n        configurable: true,\n      };\n      if (cache) {\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        descriptor.get = function (this: ReactiveElement) {\n          if (\n            ((this as unknown) as {[key: string]: Element | null})[\n              key as string\n            ] === undefined\n          ) {\n            ((this as unknown) as {[key: string]: Element | null})[\n              key as string\n            ] = this.renderRoot?.querySelector(selector);\n          }\n          return ((this as unknown) as {[key: string]: Element | null})[\n            key as string\n          ];\n        };\n      }\n      return descriptor;\n    },\n  });\n}\n"],"names":["query","selector","cache","decorateProperty","descriptor","name","[object Object]","this","renderRoot","querySelector","enumerable","configurable","key","Symbol","get","undefined"],"mappings":";;;;;YA2CgBA,EAAMC,EAAkBC,GACtC,OAAOC,EAAiB,CACtBC,WAAaC,IACX,MAAMD,EAAa,CACjBE,YACE,iBAAOC,KAAKC,iCAAYC,cAAcR,IAExCS,YAAY,EACZC,cAAc,GAEhB,GAAIT,EAAO,CACT,MAAMU,EAAsB,iBAATP,EAAoBQ,SAAW,KAAKR,EACvDD,EAAWU,IAAM,iBAUf,YANQC,IAFJR,KACAK,KAGAL,KACAK,aACEL,KAAKC,iCAAYC,cAAcR,IAE5BM,KACPK,IAIN,OAAOR"}