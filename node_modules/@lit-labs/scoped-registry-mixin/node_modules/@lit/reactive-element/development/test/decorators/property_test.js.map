{"version":3,"file":"property_test.js","sourceRoot":"","sources":["../../../src/test/decorators/property_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {\n  ReactiveElement,\n  PropertyValues,\n  PropertyDeclaration,\n} from '../../reactive-element.js';\nimport {property} from '../../decorators/property.js';\nimport {generateElementName} from '../test-helpers.js';\nimport {assert} from '@esm-bundle/chai';\n\nsuite('@property', () => {\n  let container: HTMLElement;\n\n  setup(() => {\n    container = document.createElement('div');\n    container.id = 'test-container';\n    document.body.appendChild(container);\n  });\n\n  teardown(() => {\n    if (container !== undefined) {\n      container.parentElement!.removeChild(container);\n      (container as any) = undefined;\n    }\n  });\n\n  test('property options via decorator', async () => {\n    const hasChanged = (value: any, old: any) =>\n      old === undefined || value > old;\n    const fromAttribute = (value: any) => parseInt(value);\n    const toAttribute = (value: any) => `${value}-attr`;\n    class E extends ReactiveElement {\n      @property({attribute: false}) noAttr = 'noAttr';\n      @property({attribute: true}) atTr = 'attr';\n      @property({attribute: 'custom', reflect: true})\n      customAttr = 'customAttr';\n      @property({hasChanged}) hasChanged = 10;\n      @property({converter: fromAttribute}) fromAttribute = 1;\n      @property({reflect: true, converter: {toAttribute}})\n      toAttribute = 1;\n      @property({\n        attribute: 'all-attr',\n        hasChanged,\n        converter: {fromAttribute, toAttribute},\n        reflect: true,\n      })\n      all = 10;\n\n      updateCount = 0;\n\n      update(changed: PropertyValues) {\n        this.updateCount++;\n        super.update(changed);\n      }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.equal(el.updateCount, 1);\n    assert.equal(el.noAttr, 'noAttr');\n    assert.equal(el.atTr, 'attr');\n    assert.equal(el.customAttr, 'customAttr');\n    assert.equal(el.hasChanged, 10);\n    assert.equal(el.fromAttribute, 1);\n    assert.equal(el.toAttribute, 1);\n    assert.equal(el.getAttribute('toattribute'), '1-attr');\n    assert.equal(el.all, 10);\n    assert.equal(el.getAttribute('all-attr'), '10-attr');\n    el.setAttribute('noattr', 'noAttr2');\n    el.setAttribute('attr', 'attr2');\n    el.setAttribute('custom', 'customAttr2');\n    el.setAttribute('fromattribute', '2attr');\n    el.toAttribute = 2;\n    el.all = 5;\n    await el.updateComplete;\n    assert.equal(el.updateCount, 2);\n    assert.equal(el.noAttr, 'noAttr');\n    assert.equal(el.atTr, 'attr2');\n    assert.equal(el.customAttr, 'customAttr2');\n    assert.equal(el.fromAttribute, 2);\n    assert.equal(el.toAttribute, 2);\n    assert.equal(el.getAttribute('toattribute'), '2-attr');\n    assert.equal(el.all, 5);\n    el.all = 15;\n    await el.updateComplete;\n    assert.equal(el.updateCount, 3);\n    assert.equal(el.all, 15);\n    assert.equal(el.getAttribute('all-attr'), '15-attr');\n    el.setAttribute('all-attr', '16-attr');\n    await el.updateComplete;\n    assert.equal(el.updateCount, 4);\n    assert.equal(el.getAttribute('all-attr'), '16-attr');\n    assert.equal(el.all, 16);\n    el.hasChanged = 5;\n    await el.updateComplete;\n    assert.equal(el.hasChanged, 5);\n    assert.equal(el.updateCount, 4);\n    el.hasChanged = 15;\n    await el.updateComplete;\n    assert.equal(el.hasChanged, 15);\n    assert.equal(el.updateCount, 5);\n    el.setAttribute('all-attr', '5-attr');\n    await el.updateComplete;\n    assert.equal(el.all, 5);\n    assert.equal(el.updateCount, 5);\n    el.all = 15;\n    await el.updateComplete;\n    assert.equal(el.all, 15);\n    assert.equal(el.updateCount, 6);\n  });\n\n  test('can decorate user accessor with @property', async () => {\n    class E extends ReactiveElement {\n      _foo?: number;\n      updatedContent?: number;\n\n      @property({reflect: true, type: Number})\n      get foo() {\n        return this._foo as number;\n      }\n\n      set foo(v: number) {\n        const old = this.foo;\n        this._foo = v;\n        this.requestUpdate('foo', old);\n      }\n\n      updated() {\n        this.updatedContent = this.foo;\n      }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.equal(el._foo, undefined);\n    assert.equal(el.updatedContent, undefined);\n    assert.isFalse(el.hasAttribute('foo'));\n    el.foo = 5;\n    await el.updateComplete;\n    assert.equal(el._foo, 5);\n    assert.equal(el.updatedContent, 5);\n    assert.equal(el.getAttribute('foo'), '5');\n  });\n\n  test('can mix property options via decorator and via getter', async () => {\n    const hasChanged = (value: any, old: any) =>\n      old === undefined || value > old;\n    const fromAttribute = (value: any) => parseInt(value);\n    const toAttribute = (value: any) => `${value}-attr`;\n    class E extends ReactiveElement {\n      @property({hasChanged}) hasChanged = 10;\n      @property({converter: fromAttribute}) fromAttribute = 1;\n      @property({reflect: true, converter: {toAttribute}})\n      toAttribute = 1;\n      @property({\n        attribute: 'all-attr',\n        hasChanged,\n        converter: {fromAttribute, toAttribute},\n        reflect: true,\n      })\n      all = 10;\n\n      updateCount = 0;\n\n      static get properties() {\n        return {\n          noAttr: {attribute: false},\n          atTr: {attribute: true},\n          customAttr: {attribute: 'custom', reflect: true},\n        };\n      }\n\n      noAttr: string | undefined;\n      atTr: string | undefined;\n      customAttr: string | undefined;\n\n      constructor() {\n        super();\n        this.noAttr = 'noAttr';\n        this.atTr = 'attr';\n        this.customAttr = 'customAttr';\n      }\n\n      update(changed: PropertyValues) {\n        this.updateCount++;\n        super.update(changed);\n      }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.equal(el.updateCount, 1);\n    assert.equal(el.noAttr, 'noAttr');\n    assert.equal(el.atTr, 'attr');\n    assert.equal(el.customAttr, 'customAttr');\n    assert.equal(el.hasChanged, 10);\n    assert.equal(el.fromAttribute, 1);\n    assert.equal(el.toAttribute, 1);\n    assert.equal(el.getAttribute('toattribute'), '1-attr');\n    assert.equal(el.all, 10);\n    assert.equal(el.getAttribute('all-attr'), '10-attr');\n    el.setAttribute('noattr', 'noAttr2');\n    el.setAttribute('attr', 'attr2');\n    el.setAttribute('custom', 'customAttr2');\n    el.setAttribute('fromattribute', '2attr');\n    el.toAttribute = 2;\n    el.all = 5;\n    await el.updateComplete;\n    assert.equal(el.updateCount, 2);\n    assert.equal(el.noAttr, 'noAttr');\n    assert.equal(el.atTr, 'attr2');\n    assert.equal(el.customAttr, 'customAttr2');\n    assert.equal(el.fromAttribute, 2);\n    assert.equal(el.toAttribute, 2);\n    assert.equal(el.getAttribute('toattribute'), '2-attr');\n    assert.equal(el.all, 5);\n    el.all = 15;\n    await el.updateComplete;\n    assert.equal(el.updateCount, 3);\n    assert.equal(el.all, 15);\n    assert.equal(el.getAttribute('all-attr'), '15-attr');\n    el.setAttribute('all-attr', '16-attr');\n    await el.updateComplete;\n    assert.equal(el.updateCount, 4);\n    assert.equal(el.getAttribute('all-attr'), '16-attr');\n    assert.equal(el.all, 16);\n    el.hasChanged = 5;\n    await el.updateComplete;\n    assert.equal(el.hasChanged, 5);\n    assert.equal(el.updateCount, 4);\n    el.hasChanged = 15;\n    await el.updateComplete;\n    assert.equal(el.hasChanged, 15);\n    assert.equal(el.updateCount, 5);\n    el.setAttribute('all-attr', '5-attr');\n    await el.updateComplete;\n    assert.equal(el.all, 5);\n    assert.equal(el.updateCount, 5);\n    el.all = 15;\n    await el.updateComplete;\n    assert.equal(el.all, 15);\n    assert.equal(el.updateCount, 6);\n  });\n\n  test('property options via decorator do not modify superclass', async () => {\n    class E extends ReactiveElement {\n      static get properties() {\n        return {foo: {type: Number, reflect: true}};\n      }\n\n      declare foo: number;\n\n      constructor() {\n        super();\n        // Avoiding class fields for Babel compat.\n        this.foo = 1;\n      }\n    }\n    customElements.define(generateElementName(), E);\n    // Note, this forces `E` to finalize\n    const el1 = new E();\n\n    class F extends E {\n      @property({type: Number}) foo = 2;\n    }\n\n    customElements.define(generateElementName(), F);\n    const el2 = new E();\n    const el3 = new F();\n    container.appendChild(el1);\n    container.appendChild(el2);\n    container.appendChild(el3);\n    await el1.updateComplete;\n    await el2.updateComplete;\n    await el3.updateComplete;\n    assert.isTrue(el1.hasAttribute('foo'));\n    assert.isTrue(el2.hasAttribute('foo'));\n    assert.isFalse(el3.hasAttribute('foo'));\n  });\n\n  test('can mix properties superclass with decorator on subclass', async () => {\n    class E extends ReactiveElement {\n      static get properties() {\n        return {\n          foo: {},\n        };\n      }\n\n      foo: string;\n\n      constructor() {\n        super();\n        // Avoiding class fields for Babel compat.\n        this.foo = 'foo';\n      }\n    }\n\n    class F extends E {\n      @property() bar = 'bar';\n    }\n    customElements.define(generateElementName(), F);\n    const el = new F();\n    container.appendChild(el);\n    await el.updateComplete;\n    el.setAttribute('foo', 'foo2');\n    el.setAttribute('bar', 'bar2');\n    await el.updateComplete;\n    assert.equal(el.foo, 'foo2');\n    assert.equal(el.bar, 'bar2');\n  });\n\n  test('can customize property options', async () => {\n    interface MyPropertyDeclaration<TypeHint = unknown>\n      extends PropertyDeclaration {\n      validator?: (value: any) => TypeHint;\n      observer?: (oldValue: TypeHint) => void;\n    }\n\n    interface MyPropertyDeclarations {\n      readonly [key: string]: PropertyDeclaration | MyPropertyDeclaration;\n    }\n\n    const myProperty = (options: MyPropertyDeclaration) => property(options);\n\n    class E extends ReactiveElement {\n      static getPropertyDescriptor(\n        name: PropertyKey,\n        key: string | symbol,\n        options: MyPropertyDeclaration\n      ) {\n        const defaultDescriptor = super.getPropertyDescriptor(\n          name,\n          key,\n          options\n        );\n        return {\n          get: defaultDescriptor.get,\n          set(this: E, value: unknown) {\n            const oldValue = ((this as unknown) as {[key: string]: unknown})[\n              name as string\n            ];\n            if (options.validator) {\n              value = options.validator(value);\n            }\n            ((this as unknown) as {[key: string]: unknown})[\n              key as string\n            ] = value;\n            ((this as unknown) as ReactiveElement).requestUpdate(\n              name,\n              oldValue\n            );\n          },\n\n          configurable: defaultDescriptor.configurable,\n          enumerable: defaultDescriptor.enumerable,\n        };\n      }\n\n      updated(changedProperties: PropertyValues) {\n        super.updated(changedProperties);\n        changedProperties.forEach((value: unknown, key: PropertyKey) => {\n          const options = (this\n            .constructor as typeof ReactiveElement).getPropertyOptions(\n            key\n          ) as MyPropertyDeclaration;\n          const observer = options.observer;\n          if (typeof observer === 'function') {\n            observer.call(this, value);\n          }\n        });\n      }\n\n      // provide custom deorator expecting extended type\n      @myProperty({\n        type: Number,\n        validator: (value: number) => Math.min(10, Math.max(value, 0)),\n      })\n      foo = 5;\n\n      @property({}) bar = 'bar';\n\n      _observedZot?: any;\n\n      _observedZot2?: any;\n\n      // use regular decorator and cast to type\n      @property({\n        observer: function (this: E, oldValue: string) {\n          this._observedZot = {value: this.zot, oldValue};\n        },\n      } as PropertyDeclaration)\n      zot = '';\n\n      declare zot2: string;\n      declare foo2: number;\n\n      constructor() {\n        super();\n        // Avoiding class fields for Babel compat.\n        this.zot2 = '';\n        this.foo2 = 5;\n      }\n\n      // custom typed properties\n      static get properties(): MyPropertyDeclarations {\n        return {\n          // object cast as type\n          zot2: {\n            observer: function (this: E, oldValue: string) {\n              this._observedZot2 = {value: this.zot2, oldValue};\n            },\n          } as PropertyDeclaration,\n          // object satisfying defined custom type.\n          foo2: {\n            type: Number,\n            validator: (value: number) => Math.min(10, Math.max(value, 0)),\n          },\n        };\n      }\n    }\n    customElements.define(generateElementName(), E);\n\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    el.foo = 20;\n    el.foo2 = 20;\n    assert.equal(el.foo, 10);\n    assert.equal(el.foo2, 10);\n    assert.deepEqual(el._observedZot, {value: '', oldValue: undefined});\n    assert.deepEqual(el._observedZot2, {value: '', oldValue: undefined});\n    el.foo = -5;\n    el.foo2 = -5;\n    assert.equal(el.foo, 0);\n    assert.equal(el.foo2, 0);\n    el.bar = 'bar2';\n    assert.equal(el.bar, 'bar2');\n    el.zot = 'zot';\n    el.zot2 = 'zot';\n    await el.updateComplete;\n    assert.deepEqual(el._observedZot, {value: 'zot', oldValue: ''});\n    assert.deepEqual(el._observedZot2, {value: 'zot', oldValue: ''});\n  });\n});\n"]}