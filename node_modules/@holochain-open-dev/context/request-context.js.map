{"version":3,"file":"request-context.js","sourceRoot":"","sources":["../src/request-context.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AAGzD,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,WAAmB,EAAE,EAAE;IACpD,OAAO,UAAU,KAAU,EAAE,WAAmB;QAC9C,QAAQ,EAAE,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;QAC/B,MAAM,QAAQ,GAAG,KAAK,CAAC,iBAAwB,CAAC;QAEhD,KAAK,CAAC,iBAAiB,GAAG;YACxB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEpB,MAAM,UAAU,GAAG,IAAI,iBAAiB,CACtC,IAAI,EACJ,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,EACpC,WAAmC,CACpC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { property } from 'lit/decorators.js';\nimport { ContextController } from './context-controller';\nimport { ContextEvent, ContextTypeMap } from './context-event';\n\nexport const requestContext = (contextName: string) => {\n  return function (proto: any, propertyKey: string) {\n    property()(proto, propertyKey);\n    const callback = proto.connectedCallback as any;\n\n    proto.connectedCallback = function () {\n      callback.call(this);\n\n      const controller = new ContextController(\n        this,\n        value => (this[propertyKey] = value),\n        contextName as keyof ContextTypeMap\n      );\n    };\n  };\n};\n"]}