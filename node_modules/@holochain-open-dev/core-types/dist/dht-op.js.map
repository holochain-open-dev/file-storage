{"version":3,"file":"dht-op.js","sourceRoot":"","sources":["../src/dht-op.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Create,\n  CreateLink,\n  Delete,\n  DeleteLink,\n  Header,\n  HeaderType,\n  NewEntryHeader,\n  SignedHeaderHashed,\n  Update,\n} from \"./header\";\nimport { Element } from \"./element\";\nimport { Entry } from \"./entry\";\n\n// https://github.com/holochain/holochain/blob/develop/crates/types/src/dht_op.rs\n\nexport enum DHTOpType {\n  StoreElement = \"StoreElement\",\n  StoreEntry = \"StoreEntry\",\n  RegisterAgentActivity = \"RegisterAgentActivity\",\n  RegisterUpdatedContent = \"RegisterUpdatedContent\",\n  RegisterUpdatedElement = \"RegisterUpdatedElement\",\n  RegisterDeletedBy = \"RegisterDeletedBy\",\n  RegisterDeletedEntryHeader = \"RegisterDeletedEntryHeader\",\n  RegisterAddLink = \"RegisterAddLink\",\n  RegisterRemoveLink = \"RegisterRemoveLink\",\n}\n\nexport const DHT_SORT_PRIORITY = [\n  DHTOpType.RegisterAgentActivity,\n  DHTOpType.StoreEntry,\n  DHTOpType.StoreElement,\n  DHTOpType.RegisterUpdatedContent,\n  DHTOpType.RegisterUpdatedElement,\n  DHTOpType.RegisterDeletedEntryHeader,\n  DHTOpType.RegisterDeletedBy,\n  DHTOpType.RegisterAddLink,\n  DHTOpType.RegisterRemoveLink,\n];\n\nexport interface DHTOpContent<T, H extends Header> {\n  type: T;\n  header: SignedHeaderHashed<H>;\n}\n\nexport type DHTOp =\n  | (DHTOpContent<DHTOpType.StoreElement, Header> & {\n      maybe_entry: Entry | undefined;\n    })\n  | (DHTOpContent<DHTOpType.StoreEntry, NewEntryHeader> & { entry: Entry })\n  | DHTOpContent<DHTOpType.RegisterAgentActivity, Header>\n  | DHTOpContent<DHTOpType.RegisterUpdatedContent, Update>\n  | DHTOpContent<DHTOpType.RegisterUpdatedElement, Update>\n  | DHTOpContent<DHTOpType.RegisterDeletedBy, Delete>\n  | DHTOpContent<DHTOpType.RegisterDeletedEntryHeader, Delete>\n  | DHTOpContent<DHTOpType.RegisterAddLink, CreateLink>\n  | DHTOpContent<DHTOpType.RegisterRemoveLink, DeleteLink>;\n\nexport function elementToDHTOps(element: Element): DHTOp[] {\n  const allDhtOps: DHTOp[] = [];\n\n  // All hdk commands have these two DHT Ops\n\n  allDhtOps.push({\n    type: DHTOpType.RegisterAgentActivity,\n    header: element.signed_header,\n  });\n  allDhtOps.push({\n    type: DHTOpType.StoreElement,\n    header: element.signed_header,\n    maybe_entry: element.entry,\n  });\n\n  // Each header derives into different DHTOps\n\n  if (element.signed_header.header.content.type == HeaderType.Update) {\n    allDhtOps.push({\n      type: DHTOpType.RegisterUpdatedContent,\n      header: element.signed_header as SignedHeaderHashed<Update>,\n    });\n    allDhtOps.push({\n      type: DHTOpType.RegisterUpdatedElement,\n      header: element.signed_header as SignedHeaderHashed<Update>,\n    });\n    allDhtOps.push({\n      type: DHTOpType.StoreEntry,\n      header: element.signed_header as SignedHeaderHashed<Update>,\n      entry: element.entry as Entry,\n    });\n  } else if (element.signed_header.header.content.type == HeaderType.Create) {\n    allDhtOps.push({\n      type: DHTOpType.StoreEntry,\n      header: element.signed_header as SignedHeaderHashed<Create>,\n      entry: element.entry as Entry,\n    });\n  } else if (element.signed_header.header.content.type == HeaderType.Delete) {\n    allDhtOps.push({\n      type: DHTOpType.RegisterDeletedBy,\n      header: element.signed_header as SignedHeaderHashed<Delete>,\n    });\n    allDhtOps.push({\n      type: DHTOpType.RegisterDeletedEntryHeader,\n      header: element.signed_header as SignedHeaderHashed<Delete>,\n    });\n  } else if (\n    element.signed_header.header.content.type == HeaderType.DeleteLink\n  ) {\n    allDhtOps.push({\n      type: DHTOpType.RegisterRemoveLink,\n      header: element.signed_header as SignedHeaderHashed<DeleteLink>,\n    });\n  } else if (\n    element.signed_header.header.content.type == HeaderType.CreateLink\n  ) {\n    allDhtOps.push({\n      type: DHTOpType.RegisterAddLink,\n      header: element.signed_header as SignedHeaderHashed<CreateLink>,\n    });\n  }\n\n  return allDhtOps;\n}\n\nexport function sortDHTOps(dhtOps: DHTOp[]): DHTOp[] {\n  const prio = (dhtOp: DHTOp) =>\n    DHT_SORT_PRIORITY.findIndex((type) => type === dhtOp.type);\n  return dhtOps.sort((dhtA: DHTOp, dhtB: DHTOp) => prio(dhtA) - prio(dhtB));\n}\n\nexport function getEntry(dhtOp: DHTOp): Entry | undefined {\n  if (dhtOp.type === DHTOpType.StoreEntry) return dhtOp.entry;\n  else if (dhtOp.type === DHTOpType.StoreElement) return dhtOp.maybe_entry;\n  return undefined;\n}\n"]}