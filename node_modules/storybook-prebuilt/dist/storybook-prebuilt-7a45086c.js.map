{"version":3,"file":"storybook-prebuilt-7a45086c.js","sources":["../node_modules/@storybook/channel-postmessage/dist/index.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.array.from\");\n\nrequire(\"core-js/modules/es.array.is-array\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.date.to-string\");\n\nrequire(\"core-js/modules/es.function.bind\");\n\nrequire(\"core-js/modules/es.number.constructor\");\n\nrequire(\"core-js/modules/es.number.is-integer\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.promise\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createChannel;\nexports.PostmsgTransport = exports.KEY = void 0;\n\nvar _global = require(\"global\");\n\nvar _channels = _interopRequireDefault(require(\"@storybook/channels\"));\n\nvar _clientLogger = require(\"@storybook/client-logger\");\n\nvar _telejson = require(\"telejson\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar KEY = 'storybook-channel'; // TODO: we should export a method for opening child windows here and keep track of em.\n// that way we can send postMessage to child windows as well, not just iframe\n// https://stackoverflow.com/questions/6340160/how-to-get-the-references-of-all-already-opened-child-windows\n\nexports.KEY = KEY;\n\nvar PostmsgTransport =\n/*#__PURE__*/\nfunction () {\n  function PostmsgTransport(config) {\n    _classCallCheck(this, PostmsgTransport);\n\n    this.config = config;\n    this.buffer = void 0;\n    this.handler = void 0;\n    this.connected = void 0;\n    this.buffer = [];\n    this.handler = null;\n\n    _global.window.addEventListener('message', this.handleEvent.bind(this), false); // Check whether the config.page parameter has a valid value\n\n\n    if (config.page !== 'manager' && config.page !== 'preview') {\n      throw new Error(\"postmsg-channel: \\\"config.page\\\" cannot be \\\"\".concat(config.page, \"\\\"\"));\n    }\n  }\n\n  _createClass(PostmsgTransport, [{\n    key: \"setHandler\",\n    value: function setHandler(handler) {\n      var _this = this;\n\n      this.handler = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        handler.apply(_this, args);\n\n        if (!_this.connected && _this.getWindow()) {\n          _this.flush();\n\n          _this.connected = true;\n        }\n      };\n    }\n    /**\n     * Sends `event` to the associated window. If the window does not yet exist\n     * the event will be stored in a buffer and sent when the window exists.\n     * @param event\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(event, options) {\n      var _this2 = this;\n\n      var iframeWindow = this.getWindow();\n\n      if (!iframeWindow) {\n        return new Promise(function (resolve, reject) {\n          _this2.buffer.push({\n            event: event,\n            resolve: resolve,\n            reject: reject\n          });\n        });\n      }\n\n      var depth = 15;\n      var allowFunction = true;\n\n      if (options && typeof options.allowFunction === 'boolean') {\n        allowFunction = options.allowFunction;\n      }\n\n      if (options && Number.isInteger(options.depth)) {\n        depth = options.depth;\n      }\n\n      var data = (0, _telejson.stringify)({\n        key: KEY,\n        event: event\n      }, {\n        maxDepth: depth,\n        allowFunction: allowFunction\n      }); // TODO: investigate http://blog.teamtreehouse.com/cross-domain-messaging-with-postmessage\n      // might replace '*' with document.location ?\n\n      iframeWindow.postMessage(data, '*');\n      return Promise.resolve(null);\n    }\n  }, {\n    key: \"flush\",\n    value: function flush() {\n      var _this3 = this;\n\n      var buffer = this.buffer;\n      this.buffer = [];\n      buffer.forEach(function (item) {\n        _this3.send(item.event).then(item.resolve)[\"catch\"](item.reject);\n      });\n    }\n  }, {\n    key: \"getWindow\",\n    value: function getWindow() {\n      if (this.config.page === 'manager') {\n        // FIXME this is a really bad idea! use a better way to do this.\n        // This finds the storybook preview iframe to send messages to.\n        var iframe = _global.document.getElementById('storybook-preview-iframe');\n\n        if (!iframe) {\n          return null;\n        }\n\n        return iframe.contentWindow;\n      }\n\n      return _global.window.parent;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(rawEvent) {\n      try {\n        var data = rawEvent.data;\n\n        var _ref = typeof data === 'string' && (0, _telejson.isJSON)(data) ? (0, _telejson.parse)(data) : data,\n            key = _ref.key,\n            event = _ref.event;\n\n        if (key === KEY) {\n          _clientLogger.logger.debug.apply(_clientLogger.logger, [\"message arrived at \".concat(this.config.page), event.type].concat(_toConsumableArray(event.args)));\n\n          this.handler(event);\n        }\n      } catch (error) {\n        _clientLogger.logger.error(error); // debugger;\n\n      }\n    }\n  }]);\n\n  return PostmsgTransport;\n}();\n/**\n * Creates a channel which communicates with an iframe or child window.\n */\n\n\nexports.PostmsgTransport = PostmsgTransport;\n\nfunction createChannel(_ref2) {\n  var page = _ref2.page;\n  var transport = new PostmsgTransport({\n    page: page\n  });\n  return new _channels[\"default\"]({\n    transport: transport\n  });\n}"],"names":["Object","defineProperty","exports","value","_ref2","page","transport","PostmsgTransport","_channels","obj","require$$19","__esModule","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","_defineProperties","target","props","descriptor","enumerable","configurable","writable","key","KEY","config","instance","Constructor","_classCallCheck","this","buffer","handler","connected","_global","window","addEventListener","handleEvent","bind","Error","concat","protoProps","staticProps","_this","_len","arguments","args","_key","apply","getWindow","flush","event","options","_this2","iframeWindow","Promise","resolve","reject","push","depth","allowFunction","Number","isInteger","data","_telejson","stringify","maxDepth","postMessage","_this3","forEach","item","send","then","iframe","document","getElementById","contentWindow","parent","rawEvent","_ref","isJSON","parse","_clientLogger","logger","debug","type","error"],"mappings":"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"}