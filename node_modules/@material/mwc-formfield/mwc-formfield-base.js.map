{"version":3,"file":"mwc-formfield-base.js","sourceRoot":"","sources":["mwc-formfield-base.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// tslint:disable:no-new-decorators\n\nimport {MDCFormFieldAdapter} from '@material/form-field/adapter';\nimport MDCFormFieldFoundation from '@material/form-field/foundation';\nimport {BaseElement, EventType, SpecificEventListener} from '@material/mwc-base/base-element';\nimport {FormElement} from '@material/mwc-base/form-element';\nimport {observer} from '@material/mwc-base/observer';\nimport {findAssignedElement} from '@material/mwc-base/utils';\nimport {html, property, query} from 'lit-element';\nimport {classMap} from 'lit-html/directives/class-map';\n\n\nexport class FormfieldBase extends BaseElement {\n  @property({type: Boolean}) alignEnd = false;\n  @property({type: Boolean}) spaceBetween = false;\n  @property({type: Boolean}) nowrap = false;\n\n  @property({type: String})\n  @observer(async function(this: FormfieldBase, label: string) {\n    const input = this.input;\n    if (input) {\n      if (input.localName === 'input') {\n        input.setAttribute('aria-label', label);\n      } else if (input instanceof FormElement) {\n        await input.updateComplete;\n        input.setAriaLabel(label);\n      }\n    }\n  })\n  label = '';\n\n  @query('.mdc-form-field') protected mdcRoot!: HTMLElement;\n\n  protected mdcFoundation!: MDCFormFieldFoundation;\n\n  protected readonly mdcFoundationClass = MDCFormFieldFoundation;\n\n  protected createAdapter(): MDCFormFieldAdapter {\n    return {\n      registerInteractionHandler:\n          <K extends EventType>(type: K, handler: SpecificEventListener<K>) => {\n            this.labelEl.addEventListener(type, handler);\n          },\n      deregisterInteractionHandler:\n          <K extends EventType>(type: K, handler: SpecificEventListener<K>) => {\n            this.labelEl.removeEventListener(type, handler);\n          },\n      activateInputRipple: async () => {\n        const input = this.input;\n        if (input instanceof FormElement) {\n          const ripple = await input.ripple;\n          if (ripple) {\n            ripple.startPress();\n          }\n        }\n      },\n      deactivateInputRipple: async () => {\n        const input = this.input;\n        if (input instanceof FormElement) {\n          const ripple = await input.ripple;\n          if (ripple) {\n            ripple.endPress();\n          }\n        }\n      },\n    };\n  }\n\n  // slotEl should have type HTMLSlotElement, but when TypeScript's\n  // emitDecoratorMetadata is enabled, the HTMLSlotElement constructor will\n  // be emitted into the runtime, which will cause an \"HTMLSlotElement is\n  // undefined\" error in browsers that don't define it (e.g. IE11).\n  @query('slot') protected slotEl!: HTMLElement;\n\n  @query('label') protected labelEl!: HTMLLabelElement;\n\n  protected get input() {\n    return findAssignedElement(this.slotEl as HTMLSlotElement, '*');\n  }\n\n  protected render() {\n    const classes = {\n      'mdc-form-field--align-end': this.alignEnd,\n      'mdc-form-field--space-between': this.spaceBetween,\n      'mdc-form-field--nowrap': this.nowrap\n    };\n\n    return html`\n      <div class=\"mdc-form-field ${classMap(classes)}\">\n        <slot></slot>\n        <label class=\"mdc-label\"\n               @click=\"${this._labelClick}\">${this.label}</label>\n      </div>`;\n  }\n\n  private _labelClick() {\n    const input = this.input;\n    if (input) {\n      input.focus();\n      input.click();\n    }\n  }\n}\n"]}