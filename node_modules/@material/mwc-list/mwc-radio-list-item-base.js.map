{"version":3,"file":"mwc-radio-list-item-base.js","sourceRoot":"","sources":["mwc-radio-list-item-base.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n @license\n Copyright 2020 Google Inc. All Rights Reserved.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\nimport '@material/mwc-radio';\n\nimport {Radio} from '@material/mwc-radio';\nimport {html, property, query} from 'lit-element';\nimport {classMap} from 'lit-html/directives/class-map';\nimport {ifDefined} from 'lit-html/directives/if-defined';\n\nimport {GraphicType, ListItemBase} from './mwc-list-item-base';\n\nexport class RadioListItemBase extends ListItemBase {\n  @query('slot') protected slotElement!: HTMLSlotElement|null;\n  @query('mwc-radio') protected radioElement!: Radio;\n\n  @property({type: Boolean}) left = false;\n  @property({type: String, reflect: true}) graphic: GraphicType = 'control';\n\n  protected _changeFromClick = false;\n\n  render() {\n    const radioClasses = {\n      'mdc-list-item__graphic': this.left,\n      'mdc-list-item__meta': !this.left,\n    };\n\n    const text = this.renderText();\n    const graphic = this.graphic && this.graphic !== 'control' && !this.left ?\n        this.renderGraphic() :\n        html``;\n    const meta = this.hasMeta && this.left ? this.renderMeta() : html``;\n    const ripple = this.renderRipple();\n\n    return html`\n      ${ripple}\n      ${graphic}\n      ${this.left ? '' : text}\n      <mwc-radio\n          global\n          class=${classMap(radioClasses)}\n          tabindex=${this.tabindex}\n          name=${ifDefined(this.group === null ? undefined : this.group)}\n          .checked=${this.selected}\n          ?disabled=${this.disabled}\n          @checked=${this.onChange}>\n      </mwc-radio>\n      ${this.left ? text : ''}\n      ${meta}`;\n  }\n\n  protected onClick() {\n    this._changeFromClick = true;\n    super.onClick();\n  }\n\n  protected async onChange(evt: Event) {\n    const checkbox = evt.target as Radio;\n    const changeFromProp = this.selected === checkbox.checked;\n\n    if (!changeFromProp) {\n      this._skipPropRequest = true;\n      this.selected = checkbox.checked;\n      await this.updateComplete;\n      this._skipPropRequest = false;\n\n      if (!this._changeFromClick) {\n        this.fireRequestSelected(this.selected, 'interaction');\n      }\n    }\n\n    this._changeFromClick = false;\n  }\n}\n"]}