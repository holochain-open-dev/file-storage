{"version":3,"file":"mwc-list-foundation.js","sourceRoot":"","sources":["mwc-list-foundation.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n @license\n Copyright 2020 Google Inc. All Rights Reserved.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/foundation';\nimport {normalizeKey} from '@material/dom/keyboard';\nimport {numbers, strings} from '@material/list/constants';\n\nimport {MDCListAdapter} from './mwc-list-adapter';\n\nexport type MWCListIndex = number|Set<number>;\n\nexport interface IndexDiff {\n  added: number[];\n  removed: number[];\n}\n\nexport interface SelectedDetail<T extends MWCListIndex = MWCListIndex> {\n  index: T;\n  diff: T extends Set<number>? IndexDiff: undefined;\n}\n\nexport interface ActionDetail {\n  index: number;\n}\n\nexport type SingleSelectedEvent = CustomEvent<SelectedDetail<number>>;\nexport type MultiSelectedEvent = CustomEvent<SelectedDetail<Set<number>>>;\nexport type SelectedEvent = SingleSelectedEvent|MultiSelectedEvent;\n\nconst findIndexDiff = (oldSet: Set<number>, newSet: Set<number>): IndexDiff => {\n  const oldArr = Array.from(oldSet);\n  const newArr = Array.from(newSet);\n  const diff: IndexDiff = {added: [], removed: []};\n  const oldSorted = oldArr.sort();\n  const newSorted = newArr.sort();\n\n  let i = 0;\n  let j = 0;\n  while (i < oldSorted.length || j < newSorted.length) {\n    const oldVal = oldSorted[i];\n    const newVal = newSorted[j];\n\n    if (oldVal === newVal) {\n      i++;\n      j++;\n      continue;\n    }\n\n    if (oldVal !== undefined && (newVal === undefined || oldVal < newVal)) {\n      diff.removed.push(oldVal);\n      i++;\n      continue;\n    }\n\n    if (newVal !== undefined && (oldVal === undefined || newVal < oldVal)) {\n      diff.added.push(newVal);\n      j++;\n      continue;\n    }\n  }\n\n  return diff;\n};\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n\nexport function isIndexSet(selectedIndex: MWCListIndex):\n    selectedIndex is Set<number> {\n  return selectedIndex instanceof Set;\n}\n\nexport function isEventMulti(evt: SelectedEvent): evt is MultiSelectedEvent {\n  return isIndexSet(evt.detail.index);\n}\n\nexport const createSetFromIndex = (index: MWCListIndex) => {\n  const entry = index === numbers.UNSET_INDEX ? new Set<number>() : index;\n  return isIndexSet(entry) ? new Set(entry) : new Set([entry]);\n};\n\nexport class MDCListFoundation extends MDCFoundation<MDCListAdapter> {\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n\n  static get defaultAdapter(): MDCListAdapter {\n    return {\n      focusItemAtIndex: () => undefined,\n      getFocusedElementIndex: () => 0,\n      getListItemCount: () => 0,\n      isFocusInsideList: () => false,\n      isRootFocused: () => false,\n      notifyAction: () => undefined,\n      notifySelected: () => undefined,\n      getSelectedStateForElementIndex: () => false,\n      setDisabledStateForElementIndex: () => undefined,\n      getDisabledStateForElementIndex: () => false,\n      setSelectedStateForElementIndex: () => undefined,\n      setActivatedStateForElementIndex: () => undefined,\n      setTabIndexForElementIndex: () => undefined,\n      setAttributeForElementIndex: () => undefined,\n      getAttributeForElementIndex: () => null,\n    };\n  }\n\n  private isMulti_ = false;\n  private wrapFocus_ = false;\n  private isVertical_ = true;\n  private selectedIndex_: MWCListIndex = numbers.UNSET_INDEX;\n  private focusedItemIndex_ = numbers.UNSET_INDEX;\n  private useActivatedClass_ = false;\n  private ariaCurrentAttrValue_: string|null = null;\n\n  constructor(adapter?: Partial<MDCListAdapter>) {\n    super({...MDCListFoundation.defaultAdapter, ...adapter});\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   */\n  setWrapFocus(value: boolean) {\n    this.wrapFocus_ = value;\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   */\n  setMulti(value: boolean) {\n    this.isMulti_ = value;\n\n    const currentIndex = this.selectedIndex_;\n\n    if (value) {\n      // number to set\n      if (!isIndexSet(currentIndex)) {\n        const isUnset = currentIndex === numbers.UNSET_INDEX;\n        this.selectedIndex_ = isUnset ? new Set() : new Set([currentIndex]);\n      }\n    } else {\n      // set to first sorted number in set\n      if (isIndexSet(currentIndex)) {\n        if (currentIndex.size) {\n          const vals = Array.from(currentIndex).sort();\n          this.selectedIndex_ = vals[0];\n        } else {\n          this.selectedIndex_ = numbers.UNSET_INDEX;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets the isVertical_ private variable.\n   */\n  setVerticalOrientation(value: boolean) {\n    this.isVertical_ = value;\n  }\n\n  /**\n   * Sets the useActivatedClass_ private variable.\n   */\n  setUseActivatedClass(useActivated: boolean) {\n    this.useActivatedClass_ = useActivated;\n  }\n\n  getSelectedIndex(): MWCListIndex {\n    return this.selectedIndex_;\n  }\n\n  setSelectedIndex(index: MWCListIndex) {\n    if (!this.isIndexValid_(index)) {\n      return;\n    }\n\n    if (this.isMulti_) {\n      this.setMultiSelectionAtIndex_(createSetFromIndex(index));\n    } else {\n      this.setSingleSelectionAtIndex_(index as number);\n    }\n  }\n\n  /**\n   * Focus in handler for the list items.\n   */\n  handleFocusIn(_: FocusEvent, listItemIndex: number) {\n    if (listItemIndex >= 0) {\n      this.adapter.setTabIndexForElementIndex(listItemIndex, 0);\n    }\n  }\n\n  /**\n   * Focus out handler for the list items.\n   */\n  handleFocusOut(_: FocusEvent, listItemIndex: number) {\n    if (listItemIndex >= 0) {\n      this.adapter.setTabIndexForElementIndex(listItemIndex, -1);\n    }\n\n    /**\n     * Between Focusout & Focusin some browsers do not have focus on any\n     * element. Setting a delay to wait till the focus is moved to next element.\n     */\n    setTimeout(() => {\n      if (!this.adapter.isFocusInsideList()) {\n        this.setTabindexToFirstSelectedItem_();\n      }\n    }, 0);\n  }\n\n  /**\n   * Key handler for the list.\n   */\n  handleKeydown(\n      event: KeyboardEvent, isRootListItem: boolean, listItemIndex: number) {\n    const isArrowLeft = normalizeKey(event) === 'ArrowLeft';\n    const isArrowUp = normalizeKey(event) === 'ArrowUp';\n    const isArrowRight = normalizeKey(event) === 'ArrowRight';\n    const isArrowDown = normalizeKey(event) === 'ArrowDown';\n    const isHome = normalizeKey(event) === 'Home';\n    const isEnd = normalizeKey(event) === 'End';\n    const isEnter = normalizeKey(event) === 'Enter';\n    const isSpace = normalizeKey(event) === 'Spacebar';\n\n    if (this.adapter.isRootFocused()) {\n      if (isArrowUp || isEnd) {\n        event.preventDefault();\n        this.focusLastElement();\n      } else if (isArrowDown || isHome) {\n        event.preventDefault();\n        this.focusFirstElement();\n      }\n\n      return;\n    }\n\n    let currentIndex = this.adapter.getFocusedElementIndex();\n    if (currentIndex === -1) {\n      currentIndex = listItemIndex;\n      if (currentIndex < 0) {\n        // If this event doesn't have a mdc-list-item ancestor from the\n        // current list (not from a sublist), return early.\n        return;\n      }\n    }\n\n    let nextIndex;\n    if ((this.isVertical_ && isArrowDown) ||\n        (!this.isVertical_ && isArrowRight)) {\n      this.preventDefaultEvent(event);\n      nextIndex = this.focusNextElement(currentIndex);\n    } else if (\n        (this.isVertical_ && isArrowUp) || (!this.isVertical_ && isArrowLeft)) {\n      this.preventDefaultEvent(event);\n      nextIndex = this.focusPrevElement(currentIndex);\n    } else if (isHome) {\n      this.preventDefaultEvent(event);\n      nextIndex = this.focusFirstElement();\n    } else if (isEnd) {\n      this.preventDefaultEvent(event);\n      nextIndex = this.focusLastElement();\n    } else if (isEnter || isSpace) {\n      if (isRootListItem) {\n        // Return early if enter key is pressed on anchor element which triggers\n        // synthetic MouseEvent event.\n        const target = event.target as Element | null;\n        if (target && target.tagName === 'A' && isEnter) {\n          return;\n        }\n        this.preventDefaultEvent(event);\n        this.setSelectedIndexOnAction_(currentIndex, true);\n      }\n    }\n\n    this.focusedItemIndex_ = currentIndex;\n\n    if (nextIndex !== undefined) {\n      this.setTabindexAtIndex_(nextIndex);\n      this.focusedItemIndex_ = nextIndex;\n    }\n  }\n\n  /**\n   * Click handler for the list.\n   */\n  handleSingleSelection(\n      index: number, isInteraction: boolean, force?: boolean) {\n    if (index === numbers.UNSET_INDEX) {\n      return;\n    }\n\n    this.setSelectedIndexOnAction_(index, isInteraction, force);\n    this.setTabindexAtIndex_(index);\n    this.focusedItemIndex_ = index;\n  }\n\n  /**\n   * Focuses the next element on the list.\n   */\n  focusNextElement(index: number) {\n    const count = this.adapter.getListItemCount();\n    let nextIndex = index + 1;\n    if (nextIndex >= count) {\n      if (this.wrapFocus_) {\n        nextIndex = 0;\n      } else {\n        // Return early because last item is already focused.\n        return index;\n      }\n    }\n    this.adapter.focusItemAtIndex(nextIndex);\n\n    return nextIndex;\n  }\n\n  /**\n   * Focuses the previous element on the list.\n   */\n  focusPrevElement(index: number) {\n    let prevIndex = index - 1;\n    if (prevIndex < 0) {\n      if (this.wrapFocus_) {\n        prevIndex = this.adapter.getListItemCount() - 1;\n      } else {\n        // Return early because first item is already focused.\n        return index;\n      }\n    }\n    this.adapter.focusItemAtIndex(prevIndex);\n\n    return prevIndex;\n  }\n\n  focusFirstElement() {\n    this.adapter.focusItemAtIndex(0);\n    return 0;\n  }\n\n  focusLastElement() {\n    const lastIndex = this.adapter.getListItemCount() - 1;\n    this.adapter.focusItemAtIndex(lastIndex);\n    return lastIndex;\n  }\n\n  /**\n   * @param itemIndex Index of the list item\n   * @param isEnabled Sets the list item to enabled or disabled.\n   */\n  setEnabled(itemIndex: number, isEnabled: boolean): void {\n    if (!this.isIndexValid_(itemIndex)) {\n      return;\n    }\n\n    this.adapter.setDisabledStateForElementIndex(itemIndex, !isEnabled);\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element\n   * doesn't consume the event, and it will cause an unintended scroll.\n   */\n  private preventDefaultEvent(evt: KeyboardEvent) {\n    const target = evt.target as Element;\n    const tagName = `${target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n\n  private setSingleSelectionAtIndex_(index: number, isInteraction = true) {\n    if (this.selectedIndex_ === index) {\n      return;\n    }\n\n    // unset previous\n    if (this.selectedIndex_ !== numbers.UNSET_INDEX) {\n      this.adapter.setSelectedStateForElementIndex(\n          this.selectedIndex_ as number, false);\n      if (this.useActivatedClass_) {\n        this.adapter.setActivatedStateForElementIndex(\n            this.selectedIndex_ as number, false);\n      }\n    }\n\n    // set new\n    if (isInteraction) {\n      this.adapter.setSelectedStateForElementIndex(index, true);\n    }\n    if (this.useActivatedClass_) {\n      this.adapter.setActivatedStateForElementIndex(index, true);\n    }\n    this.setAriaForSingleSelectionAtIndex_(index);\n\n    this.selectedIndex_ = index;\n\n    this.adapter.notifySelected(index);\n  }\n\n  private setMultiSelectionAtIndex_(\n      newIndex: Set<number>, isInteraction = true) {\n    const oldIndex = createSetFromIndex(this.selectedIndex_);\n    const diff = findIndexDiff(oldIndex, newIndex);\n\n    if (!diff.removed.length && !diff.added.length) {\n      return;\n    }\n\n    for (const removed of diff.removed) {\n      if (isInteraction) {\n        this.adapter.setSelectedStateForElementIndex(removed, false);\n      }\n\n      if (this.useActivatedClass_) {\n        this.adapter.setActivatedStateForElementIndex(removed, false);\n      }\n    }\n\n    for (const added of diff.added) {\n      if (isInteraction) {\n        this.adapter.setSelectedStateForElementIndex(added, true);\n      }\n\n      if (this.useActivatedClass_) {\n        this.adapter.setActivatedStateForElementIndex(added, true);\n      }\n    }\n\n    this.selectedIndex_ = newIndex;\n\n    this.adapter.notifySelected(newIndex, diff);\n  }\n\n  /**\n   * Sets aria attribute for single selection at given index.\n   */\n  private setAriaForSingleSelectionAtIndex_(index: number) {\n    // Detect the presence of aria-current and get the value only during list\n    // initialization when it is in unset state.\n    if (this.selectedIndex_ === numbers.UNSET_INDEX) {\n      this.ariaCurrentAttrValue_ =\n          this.adapter.getAttributeForElementIndex(index, strings.ARIA_CURRENT);\n    }\n\n    const isAriaCurrent = this.ariaCurrentAttrValue_ !== null;\n    const ariaAttribute =\n        isAriaCurrent ? strings.ARIA_CURRENT : strings.ARIA_SELECTED;\n\n    if (this.selectedIndex_ !== numbers.UNSET_INDEX) {\n      this.adapter.setAttributeForElementIndex(\n          this.selectedIndex_ as number, ariaAttribute, 'false');\n    }\n\n    const ariaAttributeValue =\n        isAriaCurrent ? this.ariaCurrentAttrValue_ : 'true';\n    this.adapter.setAttributeForElementIndex(\n        index, ariaAttribute, ariaAttributeValue as string);\n  }\n\n  private setTabindexAtIndex_(index: number) {\n    if (this.focusedItemIndex_ === numbers.UNSET_INDEX && index !== 0) {\n      // If no list item was selected set first list item's tabindex to -1.\n      // Generally, tabindex is set to 0 on first list item of list that has no\n      // preselected items.\n      this.adapter.setTabIndexForElementIndex(0, -1);\n    } else if (\n        this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {\n      this.adapter.setTabIndexForElementIndex(this.focusedItemIndex_, -1);\n    }\n\n    this.adapter.setTabIndexForElementIndex(index, 0);\n  }\n\n  private setTabindexToFirstSelectedItem_() {\n    let targetIndex = 0;\n\n    if (typeof this.selectedIndex_ === 'number' &&\n        this.selectedIndex_ !== numbers.UNSET_INDEX) {\n      targetIndex = this.selectedIndex_;\n    } else if (\n        isIndexSet(this.selectedIndex_) && this.selectedIndex_.size > 0) {\n      targetIndex = Math.min(...this.selectedIndex_);\n    }\n\n    this.setTabindexAtIndex_(targetIndex);\n  }\n\n  private isIndexValid_(index: MWCListIndex) {\n    if (index instanceof Set) {\n      if (!this.isMulti_) {\n        throw new Error(\n            'MDCListFoundation: Array of index is only supported for checkbox based list');\n      }\n\n      if (index.size === 0) {\n        return true;\n      } else {\n        let isOneInRange = false;\n\n        for (const entry of index) {\n          isOneInRange = this.isIndexInRange_(entry);\n\n          if (isOneInRange) {\n            break;\n          }\n        }\n\n        return isOneInRange;\n      }\n    } else if (typeof index === 'number') {\n      if (this.isMulti_) {\n        throw new Error(\n            'MDCListFoundation: Expected array of index for checkbox based list but got number: ' +\n            index);\n      }\n      return index === numbers.UNSET_INDEX || this.isIndexInRange_(index);\n    } else {\n      return false;\n    }\n  }\n\n  private isIndexInRange_(index: number) {\n    const listSize = this.adapter.getListItemCount();\n    return index >= 0 && index < listSize;\n  }\n\n  /**\n   * Sets selected index on user action, toggles checkbox / radio based on\n   * toggleCheckbox value. User interaction should not toggle list item(s) when\n   * disabled.\n   */\n  private setSelectedIndexOnAction_(\n      index: number, isInteraction: boolean, force?: boolean) {\n    if (this.adapter.getDisabledStateForElementIndex(index)) {\n      return;\n    }\n\n    let checkedIndex: MWCListIndex = index;\n\n    if (this.isMulti_) {\n      checkedIndex = new Set([index]);\n    }\n\n    if (!this.isIndexValid_(checkedIndex)) {\n      return;\n    }\n\n    if (this.isMulti_) {\n      this.toggleMultiAtIndex(index, force, isInteraction);\n    } else {\n      if (isInteraction || force) {\n        this.setSingleSelectionAtIndex_(index, isInteraction);\n      } else {\n        const isDeselection = this.selectedIndex_ === index;\n        if (isDeselection) {\n          this.setSingleSelectionAtIndex_(numbers.UNSET_INDEX);\n        }\n      }\n    }\n\n    if (isInteraction) {\n      this.adapter.notifyAction(index);\n    }\n  }\n\n  toggleMultiAtIndex(index: number, force?: boolean, isInteraction = true) {\n    let newSelectionValue = false;\n\n    if (force === undefined) {\n      newSelectionValue = !this.adapter.getSelectedStateForElementIndex(index);\n    } else {\n      newSelectionValue = force;\n    }\n\n    const newSet = createSetFromIndex(this.selectedIndex_);\n\n    if (newSelectionValue) {\n      newSet.add(index);\n    } else {\n      newSet.delete(index);\n    }\n\n    this.setMultiSelectionAtIndex_(newSet, isInteraction);\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility\n// with MDC Web v0.44.0 and earlier.\nexport default MDCListFoundation;\n"]}