{"version":3,"file":"mwc-list-adapter.js","sourceRoot":"","sources":["mwc-list-adapter.ts"],"names":[],"mappings":"","sourcesContent":["/**\n@license\nCopyright 2020 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {IndexDiff, MWCListIndex} from './mwc-list-foundation';\n\n/**\n * Defines the shape of the adapter expected by the foundation.\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n */\nexport interface MDCListAdapter {\n  getListItemCount(): number;\n\n  getFocusedElementIndex(): number;\n\n\n  setAttributeForElementIndex:\n      (index: number, attribute: string, value: string) => void;\n  getAttributeForElementIndex:\n      (index: number, attribute: string) => string | null;\n  getSelectedStateForElementIndex: (index: number) => boolean;\n  setDisabledStateForElementIndex: (index: number, value: boolean) => void;\n  getDisabledStateForElementIndex: (index: number) => boolean;\n  setSelectedStateForElementIndex: (index: number, value: boolean) => void;\n  setActivatedStateForElementIndex: (index: number, value: boolean) => void;\n\n  /**\n   * Focuses list item at the index specified.\n   */\n  focusItemAtIndex(index: number): void;\n\n  /**\n   * Sets the tabindex to the value specified for all button/a element children\n   * of the list item at the index specified.\n   */\n  setTabIndexForElementIndex(index: number, tabIndexValue: number): void;\n\n  /**\n   * @return true if root element is focused.\n   */\n  isRootFocused(): boolean;\n\n  /**\n   * Notifies user action on list item.\n   */\n  notifyAction(index: MWCListIndex): void;\n\n  notifySelected(index: MWCListIndex, diff?: IndexDiff): void;\n\n  /**\n   * @return true when the current focused element is inside list root.\n   */\n  isFocusInsideList(): boolean;\n}\n"]}