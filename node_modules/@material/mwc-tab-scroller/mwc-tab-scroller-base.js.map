{"version":3,"file":"mwc-tab-scroller-base.js","sourceRoot":"","sources":["mwc-tab-scroller-base.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {matches} from '@material/dom/ponyfill';\nimport {addHasRemoveClass, BaseElement} from '@material/mwc-base/base-element';\nimport {MDCTabScrollerAdapter} from '@material/tab-scroller/adapter';\nimport MDCTabScrollerFoundation from '@material/tab-scroller/foundation';\nimport {eventOptions, html, query} from 'lit-element';\n\nexport class TabScrollerBase extends BaseElement {\n  protected mdcFoundation!: MDCTabScrollerFoundation;\n\n  protected mdcFoundationClass = MDCTabScrollerFoundation;\n\n  @query('.mdc-tab-scroller') protected mdcRoot!: HTMLElement;\n\n  @query('.mdc-tab-scroller__scroll-area')\n  protected scrollAreaElement!: HTMLElement;\n\n  @query('.mdc-tab-scroller__scroll-content')\n  protected scrollContentElement!: HTMLElement;\n\n  @eventOptions({passive: true})\n  private _handleInteraction() {\n    this.mdcFoundation.handleInteraction();\n  }\n\n  private _handleTransitionEnd(e: Event) {\n    this.mdcFoundation.handleTransitionEnd(e);\n  }\n\n  private _scrollbarHeight = -1;\n\n  protected render() {\n    return html`\n      <div class=\"mdc-tab-scroller\">\n        <div class=\"mdc-tab-scroller__scroll-area\"\n            @wheel=\"${this._handleInteraction}\"\n            @touchstart=\"${this._handleInteraction}\"\n            @pointerdown=\"${this._handleInteraction}\"\n            @mousedown=\"${this._handleInteraction}\"\n            @keydown=\"${this._handleInteraction}\"\n            @transitionend=\"${this._handleTransitionEnd}\">\n          <div class=\"mdc-tab-scroller__scroll-content\"><slot></slot></div>\n        </div>\n      </div>\n      `;\n  }\n\n  protected createAdapter(): MDCTabScrollerAdapter {\n    return {\n      ...addHasRemoveClass(this.mdcRoot),\n      eventTargetMatchesSelector: (evtTarget: EventTarget, selector: string) =>\n          matches(evtTarget as Element, selector),\n      addScrollAreaClass: (className: string) =>\n          this.scrollAreaElement.classList.add(className),\n      setScrollAreaStyleProperty: (prop: string, value: string) =>\n          this.scrollAreaElement.style.setProperty(prop, value),\n      setScrollContentStyleProperty: (prop: string, value: string) =>\n          this.scrollContentElement.style.setProperty(prop, value),\n      getScrollContentStyleValue: (propName: string) =>\n          window.getComputedStyle(this.scrollContentElement)\n              .getPropertyValue(propName),\n      setScrollAreaScrollLeft: (scrollX: number) =>\n          this.scrollAreaElement.scrollLeft = scrollX,\n      getScrollAreaScrollLeft: () => this.scrollAreaElement.scrollLeft,\n      getScrollContentOffsetWidth: () => this.scrollContentElement.offsetWidth,\n      getScrollAreaOffsetWidth: () => this.scrollAreaElement.offsetWidth,\n      computeScrollAreaClientRect: () =>\n          this.scrollAreaElement.getBoundingClientRect(),\n      computeScrollContentClientRect: () =>\n          this.scrollContentElement.getBoundingClientRect(),\n      computeHorizontalScrollbarHeight: () => {\n        if (this._scrollbarHeight === -1) {\n          this.scrollAreaElement.style.overflowX = 'scroll';\n          this._scrollbarHeight = this.scrollAreaElement.offsetHeight -\n              this.scrollAreaElement.clientHeight;\n          this.scrollAreaElement.style.overflowX = '';\n        }\n        return this._scrollbarHeight;\n      },\n    };\n  }\n\n  /**\n   * Returns the current visual scroll position\n   * @return {number}\n   */\n  getScrollPosition() {\n    return this.mdcFoundation.getScrollPosition();\n  }\n\n  /**\n   * Returns the width of the scroll content\n   * @return {number}\n   */\n  getScrollContentWidth() {\n    return this.scrollContentElement.offsetWidth;\n  }\n\n  /**\n   * Increments the scroll value by the given amount\n   * @param {number} scrollXIncrement The pixel value by which to increment the\n   *     scroll value\n   */\n  incrementScrollPosition(scrollXIncrement: number) {\n    this.mdcFoundation.incrementScroll(scrollXIncrement);\n  }\n\n  /**\n   * Scrolls to the given pixel position\n   * @param {number} scrollX The pixel value to scroll to\n   */\n  scrollToPosition(scrollX: number) {\n    this.mdcFoundation.scrollTo(scrollX);\n  }\n}\n"]}