{"version":3,"file":"observer-c2e992b9.js","sources":["../node_modules/@material/mwc-base/observer.js"],"sourcesContent":["/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/ // tslint:disable:no-any\n/**\n * Specifies an observer callback that is run when the decorated property\n * changes. The observer receives the current and old value as arguments.\n */\nexport const observer = (observer) => \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(proto, propName) => {\n    // if we haven't wrapped `updated` in this class, do so\n    if (!proto.constructor\n        ._observers) {\n        proto.constructor._observers = new Map();\n        const userUpdated = proto.updated;\n        proto.updated = function (changedProperties) {\n            userUpdated.call(this, changedProperties);\n            changedProperties.forEach((v, k) => {\n                const observers = this.constructor\n                    ._observers;\n                const observer = observers.get(k);\n                if (observer !== undefined) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    observer.call(this, this[k], v);\n                }\n            });\n        };\n        // clone any existing observers (superclasses)\n        // eslint-disable-next-line no-prototype-builtins\n    }\n    else if (!proto.constructor.hasOwnProperty('_observers')) {\n        const observers = proto.constructor._observers;\n        proto.constructor._observers = new Map();\n        observers.forEach(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (v, k) => proto.constructor._observers.set(k, v));\n    }\n    // set this method\n    proto.constructor._observers.set(propName, observer);\n};\n//# sourceMappingURL=observer.js.map"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,QAAQ,GAAG,CAAC,QAAQ;AACjC;AACA,CAAC,KAAK,EAAE,QAAQ,KAAK;AACrB;AACA,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW;AAC1B,SAAS,UAAU,EAAE;AACrB,QAAQ,KAAK,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;AACjD,QAAQ,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC;AAC1C,QAAQ,KAAK,CAAC,OAAO,GAAG,UAAU,iBAAiB,EAAE;AACrD,YAAY,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;AACtD,YAAY,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAChD,gBAAgB,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW;AAClD,qBAAqB,UAAU,CAAC;AAChC,gBAAgB,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAClD,gBAAgB,IAAI,QAAQ,KAAK,SAAS,EAAE;AAC5C;AACA,oBAAoB,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACpD,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS,CAAC;AACV;AACA;AACA,KAAK;AACL,SAAS,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;AAC9D,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC;AACvD,QAAQ,KAAK,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;AACjD,QAAQ,SAAS,CAAC,OAAO;AACzB;AACA,QAAQ,CAAC,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC1D,KAAK;AACL;AACA,IAAI,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACzD;;;;"}